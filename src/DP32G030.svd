<?xml version="1.0" encoding="UTF-8"?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.3" xsi:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
    <name>DP32G030</name>
    <version>1.0</version>
    <description>DP32G030</description>
    <cpu>
        <name>CM0</name>
        <revision>r0p0</revision>
        <endian>little</endian>
        <mpuPresent>false</mpuPresent>
        <fpuPresent>false</fpuPresent>
        <nvicPrioBits>4</nvicPrioBits>
        <vendorSystickConfig>false</vendorSystickConfig>
    </cpu>
    <addressUnitBits>8</addressUnitBits>
    <width>32</width>
    <size>0x20</size>
    <resetValue>0x0</resetValue>
    <resetMask>0xFFFFFFFF</resetMask>
    <peripherals>
        <peripheral>
            <name>SYSCON</name>
            <description>System Configuration unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40000000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>CLK_SEL</name>
                    <description>Clock Select Register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x02</resetValue>
                    <fields>
                        <field>
                            <name>PLL_CLK_SEL</name>
                            <description>PLL Input Clock Selection
                                0: RCHF
                                1: XTAH</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SARADC_SMPL_CLK_SEL</name>
                            <description>SARADC Sampling Clock Selection
                                00: 1 division of the system clock
                                01: 2 divisions of the system clock
                                10: 4 divisions of the system clock
                                11: 8-division frequency of the system clock</description>
                            <bitRange>[11:10]</bitRange>
                            <access>write-only</access>
                        </field>
                        <field>
                            <name>SARADC_SMPL_CLK_SEL</name>
                            <description>SARADC Sampling Clock Selection
                                00: 1 division of the system clock
                                01: 2 divisions of the system clock
                                10: 4 divisions of the system clock
                                11: 8-division frequency of the system clock</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>PLL_CLK_SEL</name>
                            <description>PLL Input Clock Selection
                                0: RCHF
                                1: XTAH</description>
                            <bitRange>[7:7]</bitRange>
                            <access>write-only</access>
                        </field>
                        <field>
                            <name>SRC_CLK_SEL</name>
                            <description>Source clock (SRC_CLK) selection
                                000: RCHF
                                001: RCLF
                                010: XTAH
                                011: XTAL
                                100: PLL</description>
                            <bitRange>[6:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DIV_CLK_SEL</name>
                            <description>Divided frequency clock (DIV_CLK) selection
                                000: 1-division frequency of SRC_CLK
                                001: 2 divisions of SRC_CLK
                                010: 4-division frequency of SRC_CLK
                                011: 8-division frequency of SRC_CLK
                                100: 16 divisions of SRC_CLK
                                101: 32 divisions of SRC_CLK</description>
                            <bitRange>[3:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SYS_CLK_SEL</name>
                            <description>System Clock Selection
                                0: RCHF clock
                                1: DIV_CLK Clock</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DIV_CLK_GATE</name>
                    <description>Divided Clock Gating Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x01</resetValue>
                    <fields>
                        <field>
                            <name>DIV_CLK_GATE</name>
                            <description>Fractional Clock Gating
                                1: Divided Clock Output
                                0: Frequency division clock disabled
                                Note: When it is necessary to change the DIV_CLK_SEL or SRC_CLK_SEL register, it is necessary to switch the system clock to RCHF first, then set this register to 0 to turn off DIV_CLK, and then finally change the value of DIV_CLK_SEL or SRC_CLK_SEL, so as to ensure the reliability of the clock.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DEV_CLK_GATE</name>
                    <description>Peripheral Clock Gating Registers</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AES_CLK_GATE</name>
                            <description>AES128 Module Clock Gating</description>
                            <bitRange>[28:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CRC_CLK_GATE</name>
                            <description>CRC Module Clock Gating</description>
                            <bitRange>[27:27]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SARADC_CLK_GATE</name>
                            <description>SARADC_CTRL Module Clock Gating</description>
                            <bitRange>[25:25]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>WWDT_CLK_GATE</name>
                            <description>WWDT Module Clock Gating</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>IWDT_CLK_GATE</name>
                            <description>IWDT Module Clock Gating</description>
                            <bitRange>[23:23]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTC_CLK_GATE</name>
                            <description>RTC Module Clock Gating</description>
                            <bitRange>[22:22]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PWM_PLUS1_CLK_GATE</name>
                            <description>PWM_PLUS1 Module Clock Gating</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PWM_PLUS0_CLK_GATE</name>
                            <description>PWM_PLUS0 Module Clock Gating</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PWM_BASE1_CLK_GATE</name>
                            <description>PWM_BASE1 Module Clock Gating</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PWM_BASE0_CLK_GATE</name>
                            <description>PWM_BASE0 Module Clock Gating</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMER_PLUS1_CLK_GATE</name>
                            <description>TIMER_PLUS1 Module Clock Gating</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMER_PLUS0_CLK_GATE</name>
                            <description>TIMER_PLUS0 Module Clock Gating</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMER_BASE2_CLK_GATE</name>
                            <description>TIMER_BASE2 Module Clock Gating</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMER_BASE1_CLK_GATE</name>
                            <description>TIMER_BASE1 Module Clock Gating</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMER_BASE0_CLK_GATE</name>
                            <description>TIMER_BASE0 Module Clock Gating</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPI1_CLK_GATE</name>
                            <description>SPI1 Module Clock Gating</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPI0_CLK_GATE</name>
                            <description>SPI0 Module Clock Gating</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UART2_CLK_GATE</name>
                            <description>UART2 Module Clock Gating</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UART1_CLK_GATE</name>
                            <description>UART1 Module Clock Gating</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UART0_CLK_GATE</name>
                            <description>UART0 Module Clock Gating</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>IIC1_CLK_GATE</name>
                            <description>IIC1 Module Clock Gating</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>IIC0_CLK_GATE</name>
                            <description>IIC0 Module Clock Gating</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>GPIOC_CLK_GATE</name>
                            <description>GPIOC Module Clock Gating</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>GPIOB_CLK_GATE</name>
                            <description>GPIOB Module Clock Gating</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>GPIOA_CLK_GATE</name>
                            <description>GPIOA Module Clock Gating</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RC_FREQ_DELTA</name>
                    <description>RCHF/RCLF True Frequency Value Difference Register</description>
                    <addressOffset>0x78</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RCHF_SIG</name>
                            <description>1: Indicates that RCHF_DELTA is positive.
                                0: Indicates that RCHF_DELTA is negative.</description>
                            <bitRange>[31:31]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RCHF_DELTA</name>
                            <description>RCHF Difference between actual test frequency and 48MHz Note: The true frequency is the sum of
                                48MHz and the difference.</description>
                            <bitRange>[30:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RCLF_SIG</name>
                            <description>1: Indicates that RCLF_DELTA is positive.
                                0: Indicates that RCLF_DELTA is negative.</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RCLF_DELTA</name>
                            <description>RCLF Difference between actual test frequency and 32.768KHz Note: The true frequency is the sum of
                                32.768KHz and the difference.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>VREF_VOLT_DELTA</name>
                    <description>VREFTrue Voltage Difference Register</description>
                    <addressOffset>0x7C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>VREF_SIG</name>
                            <description>1: Indicates that VREF_DELTA is positive.
                                0: Indicates that VREF_DELTA is negative.</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>VREF_DELTA</name>
                            <description>VREF Difference between actual test reference voltage value and theoretical value (in mv)
                                Note: The true voltage value is the sum of the theoretical value and the difference.</description>
                            <bitRange>[5:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>CHIP_ID0</name>
                    <description>Equipment ID register 0</description>
                    <addressOffset>0x80</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>CHIP_ID1</name>
                    <description>Equipment ID register 1</description>
                    <addressOffset>0x84</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>CHIP_ID2</name>
                    <description>Equipment ID register 2</description>
                    <addressOffset>0x88</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>CHIP_ID3</name>
                    <description>Equipment ID register 3</description>
                    <addressOffset>0x8C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>PLL_CTRL</name>
                    <description>PLL control register</description>
                    <addressOffset>0x180</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x02C8</resetValue>
                    <fields>
                        <field>
                            <name>PLL_M</name>
                            <description>PLL Reference Clock Divider
                                00000:1 crossover frequency
                                00001: 2 crossover frequency
                                00010: 3 crossover frequency
                                00011: 4 crossover frequency
                                ......
                                11110:31 Crossover frequency
                                11111: 32 crossover frequency</description>
                            <bitRange>[10:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PLL_N</name>
                            <description>PLL Feedback Clock Division
                                00000: 2 crossover frequency
                                00001: 4 crossover frequency
                                00010: 6 crossover frequency
                                00011: 8 crossover frequency
                                ......
                                11110: 62 crossover frequency
                                11111: 64 crossover frequency</description>
                            <bitRange>[5:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PLL_EN</name>
                            <description>PLL enable control bit
                                0: Turn off PLL
                                1: Enable PLL
                                Note: The PLL will not lock until at least 30us after it is turned on.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PLL_ST</name>
                    <description>PLL status register</description>
                    <addressOffset>0x184</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PLL_LOCK</name>
                            <description>PLL Lock Status Bit
                                0: not locked
                                1: Locked, PLL clock can be used</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PMU</name>
            <description>Power management unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40000800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>LPOW_MD</name>
                    <description>Low Power Mode Select Register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>STOP</name>
                            <description>Write 1 to this register, the chip enters STOP mode</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DEEPSLEEP</name>
                            <description>Write 1 to this register, the chip enters DEEPSLEEP mode, hardware clears it automatically</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SLEEP</name>
                            <description>Write 1 to this register, the chip enters SLEEP mode, hardware clears it automatically</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>LPMD_WKEN</name>
                    <description>Low Power Wakeup Source Enable Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IO_WKEN</name>
                            <description>IO wake-up enable in low-power mode
                                0: disable
                                1: Enable
                                Note 1: Which IO has the wake-up function can be configured through the PORTA_WKE, PORTB_WKE, PORTC_WKE registers.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>rtc_tim_wken</name>
                            <description>RTC time signal wake-up enable in low-power mode
                                1: RTC time signal with low-power wake-up function</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTC_ALA_WKEN</name>
                            <description>RTC alarm signal wake-up enable in low-power mode
                                1: RTC alarm signal with low-power wake-up function</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>LPMD_WKST</name>
                    <description>Low Power Wakeup Source Status Register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IO_WKST</name>
                            <description>IO wake-up flag in low-power mode
                                1: Wake on IO event
                                0: no IO event wakeup hardware set to 1, software write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RTC_TIM_WKST</name>
                            <description>RTC time to wake up flag in low power mode
                                1: RTC time event wakeup hardware set to 1, software write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RTC_ALA_WKST</name>
                            <description>RTC alarm clock wake-up flag in low-power mode
                                1: RTC alarm event wakeup hardware set to 1, software write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>CHIP_RST_ST</name>
                    <description>Chip Reset Status Register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x01</resetValue>
                    <fields>
                        <field>
                            <name>WWDT_RST_ST</name>
                            <description>WWDT Reset Status Flag Register
                                0: Indicates that no WWDT reset has occurred
                                1: Indicates a WWDT reset Write 1 Clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>IWDT_RST_ST</name>
                            <description>IWDT Reset Status Flag Register
                                0: Indicates that no IWDT reset has occurred.
                                1: Indicates an IWDT reset Write 1 Clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>POR_RST_ST</name>
                            <description>Power-on reset status flag register
                                0: Indicates no power-on reset
                                1: Indicates a power-on reset Write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SRC_CFG</name>
                    <description>Clock Source Configuration Register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x03</resetValue>
                    <fields>
                        <field>
                            <name>RTC_CLK_SEL</name>
                            <description>RTC Clock Selection
                                0: RCLF
                                1: XTAL</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>XTAL_EN</name>
                            <description>XTAL enable control bit
                                0: Close XTAL
                                1: Turn on XTAL</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>XTAH_EN</name>
                            <description>XTAH Enable Control Bit
                                0: Close XTAH
                                1: Turn on XTAH</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RCHF_FSEL</name>
                            <description>RCHF Frequency selection control bit
                                0: 48MHz
                                1: 24 MHz</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RCHF_EN</name>
                            <description>RCHF enable control bit
                                0: Close RCHF
                                1: Enable RCHF</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_POW0</name>
                    <description>POW0 Related Analog Modules TRIM register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_TEMPCO_HPBG</name>
                            <description>HPBG temperature trim bit</description>
                            <bitRange>[10:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_I_HP</name>
                            <description>HPBG current trim bit</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_V_HP</name>
                            <description>HPBG Voltage trim bit</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_POW1</name>
                    <description>POW1 Related Analog Modules TRIM register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_V_LP</name>
                            <description>LPBG Voltage trim bit</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_TEMPCO_LPBG</name>
                            <description>LPBG temperature trim bit</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_POW2</name>
                    <description>POW2 Related Analog Modules TRIM register</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>TRIM_POW3</name>
                    <description>POW3 Related Analog Modules TRIM register</description>
                    <addressOffset>0x2C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_HPLDO_H</name>
                            <description>HPLDO voltage adjusted to 1.264v 0: unchanged
                                1: Adjust upward to 1.264v</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_LPLDO</name>
                            <description>LPLDO Voltage output trim bit
                                00: 1.1V
                                01: 1.0V
                                10: 0.9V
                                11: 0.8V</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_PD_UVLO</name>
                            <description>UVLO33 trim bit
                                0: Under SLEEP, the chip resets when the supply voltage drops to 1.8V; the analog circuitry consumes an additional 0.6uA of power in this case;
                                1: Under SLEEP, the chip resets when the supply voltage drops to 1.3V (+-500mV deviation); the analog circuitry saves 0.6uA of power consumption;</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_RCHF</name>
                    <description>RCHF Clock Module TRIM Register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0808</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_N</name>
                            <description>RCHF N trim bit</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_P</name>
                            <description>RCHF P trim bit</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_RCLF</name>
                    <description>RCLF Clock Module TRIM Register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0810</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_CS</name>
                            <description>RCLF CS trim bit (coarse trim bit)</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TRIM_FINE</name>
                            <description>RCLF FINE trim bit (fine trim bit)</description>
                            <bitRange>[4:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_OPA</name>
                    <description>OPA Module TRIM Register</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>OPA1_TRIMP</name>
                            <description>P-terminal TRIM bit of OPA1</description>
                            <bitRange>[19:15]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OPA1_TRIMN</name>
                            <description>N-terminal TRIM bit of OPA1</description>
                            <bitRange>[14:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OPA0_TRIMP</name>
                            <description>P-terminal TRIM bit of OPA0</description>
                            <bitRange>[9:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OPA0_TRIMN</name>
                            <description>N-terminal TRIM bit of OPA0</description>
                            <bitRange>[4:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_PLL</name>
                    <description>PLL Module TRIM Register</description>
                    <addressOffset>0x3C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PLL_R_TRSIM</name>
                            <description>R value of PLL TRIM bit</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TRIM_LOCK</name>
                    <description>TRIM Locks the registers</description>
                    <addressOffset>0x80</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIM_UNLOCK</name>
                            <description>The corresponding TRIM configuration register can be rewritten by writing this register to 0xAA.</description>
                            <bitRange>[15:8]</bitRange>
                            <access>write-only</access>
                        </field>
                        <field>
                            <name>TRIM_LOCK</name>
                            <description>Writing this register to 0x55 prevents the corresponding TRIM configuration register from being rewritten, and is used to protect against accidental rewriting of TRIM registers.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DATA_BAK0</name>
                    <description>Non-power-off domain data backup register0</description>
                    <addressOffset>0x100</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DATA_BAK1</name>
                    <description>Non-power-off domain data backup register1</description>
                    <addressOffset>0x104</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DATA_BAK2</name>
                    <description>Non-power-off domain data backup register2</description>
                    <addressOffset>0x108</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DATA_BAK3</name>
                    <description>Non-power-off domain data backup register3</description>
                    <addressOffset>0x10C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>DMA</name>
            <description>DMA unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40001000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>DMA</name>
                <value>3</value>
            </interrupt>
            <registers>
                <register>
                    <name>DMA_CTR</name>
                    <description>DMA control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DMA_EN</name>
                            <description>DMA Enable
                                0: DMA off
                                1: DMA Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_INTEN</name>
                    <description>DMA interrupt enable register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH3_THC_INTEN</name>
                            <description>Channel 3 Transmission Half Completed Interrupt Enable</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_THC_INTEN</name>
                            <description>Channel 2 Transmission Half Completed Interrupt Enable</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_THC_INTEN</name>
                            <description>Channel 1 Transmission Half Completed Interrupt Enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_THC_INTEN</name>
                            <description>Channel 0 Transmission Half Completed Interrupt Enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH3_TC_INTEN</name>
                            <description>Channel 3 Transmission Completion Interrupt Enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_TC_INTEN</name>
                            <description>Channel 2 Transmission Completion Interrupt Enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_TC_INTEN</name>
                            <description>Channel 1 Transmission Completion Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_TC_INTEN</name>
                            <description>Channel 0 Transmission Completion Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_INTST</name>
                    <description>DMA Interrupt Status Register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH3_THC_INTST</name>
                            <description>Channel 3 Transmission Half Completed Interrupt Status Register Write 1 to clear.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_THC_INTST</name>
                            <description>Channel 2 Transmission Half Completed Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_THC_INTST</name>
                            <description>Channel 1 Transmission Half Completed Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_THC_INTST</name>
                            <description>Channel 0 Transmission Half Completed Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH3_TC_INTST</name>
                            <description>Channel 3 Transmission Completion Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_TC_INTST</name>
                            <description>Channel 2 Transmission Completion Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_TC_INTST</name>
                            <description>Channel 1 Transmission Completion Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_TC_INTST</name>
                            <description>Channel 0 Transmission Completion Interrupt Status Register Write 1 to clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH0CTR</name>
                    <description>CH0 control register</description>
                    <addressOffset>0x100</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1FFE</resetValue>
                    <fields>
                        <field>
                            <name>SWREQ</name>
                            <description>Requesting this channel to start transmission via software Write 1 Starting transmission
                                Note 1: Only used for requests initiated when the source address side is configured as a storage device.
                                Note 2: If LOOP is configured as 0, it will be automatically cleared by hardware upon completion of a transfer; if LOOP is configured as 1, it will be cleared by software control.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRI</name>
                            <description>channel prioritization
                                00: Low
                                01: Medium
                                10: High
                                11: Maximum
                                Note: If different channels are configured with the same priority, the one with the smaller channel number has the higher priority.</description>
                            <bitRange>[15:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOOP</name>
                            <description>Cycle mode control bit
                                0: Cyclic mode is not executed. Stop when transmission is completed
                                1: Execute the cyclic method. Automatically re-transmits according to the original configuration after the transmission is completed</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LENTH</name>
                            <description>Transmission Count Register, which indicates the number of requests transmitted on this channel. The actual number of transmissions is (LENTH+1). The unit of data for each transmission is: the unit of data on the source address side is determined by the MS_SIZE is determined; the data unit on the destination address side is determined by MD_SIZE.</description>
                            <bitRange>[12:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH_EN</name>
                            <description>Channel Enable Control
                                0: Channel closed
                                1: Channel effective
                                Note 1: Channel enable is written 1 by software to initiate a transmission. loop If configured as
                                0, a transmission is completed and automatically cleared by hardware; LOOP If configured as 1, it is cleared by software control.
                                Note 2: All configurations need to be done with enable off. When this bit is 1, the relevant configuration cannot be changed.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH0MOD</name>
                    <description>CH0 mode register</description>
                    <addressOffset>0x104</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MD_SEL</name>
                            <description>MD Side Peripheral Selection
                                000: Select storage peripheral
                                001: Select the peripheral that generates hsreq_md[0].
                                010: Select the peripheral that generates hsreq_md[1].
                                011: Select the peripheral that generates hsreq_md[2].
                                100: Select the peripheral that generates hsreq_md[3].
                                101: Select the peripheral that generates hsreq_md[4]
                                110: Select the peripheral that generates hsreq_md[5].
                                111: Select the peripheral that generates hsreq_md[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[13:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_SIZE</name>
                            <description>MD Side Bus Transfer Width
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_ADDMOD</name>
                            <description>Address change method selection on the MD side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SEL</name>
                            <description>MS Side Peripheral Selection
                                000: Select the memory peripheral
                                001: Select the peripheral that generates hsreq_ms[0].
                                010: Select the peripheral that generates hsreq_ms[1].
                                011: Select the peripheral that generates hsreq_ms[2].
                                100: Select the peripheral that generates hsreq_ms[3].
                                101: Select the peripheral that generates hsreq_ms[4].
                                110: Select the peripheral that generates hsreq_ms[5].
                                111: Select the peripheral that generates hsreq_ms[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SIZE</name>
                            <description>Bus transfer width on MS side
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_ADDMOD</name>
                            <description>Address change method selection on the MS side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH0MSADDR</name>
                    <description>CH0 source address register</description>
                    <addressOffset>0x108</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH0MDADDR</name>
                    <description>CH0 Destination Address Register</description>
                    <addressOffset>0x10C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH0_ST</name>
                    <description>CH0 status register</description>
                    <addressOffset>0x110</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CUR_LENTH</name>
                            <description>Number of current transfers</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH1CTR</name>
                    <description>CH1 control register</description>
                    <addressOffset>0x120</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1FFE</resetValue>
                    <fields>
                        <field>
                            <name>SWREQ</name>
                            <description>Requesting this channel to start transmission via software Write 1 Starting transmission
                                Note 1: Only used for requests initiated when the source address side is configured as a storage device.
                                Note 2: If LOOP is configured as 0, it will be automatically cleared by hardware upon completion of a transfer; if LOOP is configured as 1, it will be cleared by software control.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRI</name>
                            <description>channel prioritization
                                00: Low
                                01: Medium
                                10: High
                                11: Maximum
                                Note: If different channels are configured with the same priority, the one with the smaller channel number has the higher priority.</description>
                            <bitRange>[15:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOOP</name>
                            <description>Cycle mode control bit
                                0: Cyclic mode is not executed. Stop when transmission is completed
                                1: Execute the cyclic method. Automatically re-transmits according to the original configuration after the transmission is completed</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LENTH</name>
                            <description>Transmission Count Register, which indicates the number of requests transmitted on this channel. The actual number of transmissions is (LENTH+1). The unit of data for each transmission is: the unit of data on the source address side is determined by the MS_SIZE is determined; the data unit on the destination address side is determined by MD_SIZE.</description>
                            <bitRange>[12:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH_EN</name>
                            <description>Channel Enable Control
                                0: Channel closed
                                1: Channel effective
                                Note 1: Channel enable is written 1 by software to initiate a transmission. loop If configured as
                                0, a transmission is completed and automatically cleared by hardware; LOOP If configured as 1, it is cleared by software control.
                                Note 2: All configurations need to be done with enable off. When this bit is 1, the relevant configuration cannot be changed.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH1MOD</name>
                    <description>CH1 mode register</description>
                    <addressOffset>0x124</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MD_SEL</name>
                            <description>MD Side Peripheral Selection
                                000: Select storage peripheral
                                001: Select the peripheral that generates hsreq_md[0].
                                010: Select the peripheral that generates hsreq_md[1].
                                011: Select the peripheral that generates hsreq_md[2].
                                100: Select the peripheral that generates hsreq_md[3].
                                101: Select the peripheral that generates hsreq_md[4]
                                110: Select the peripheral that generates hsreq_md[5].
                                111: Select the peripheral that generates hsreq_md[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[13:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_SIZE</name>
                            <description>MD Side Bus Transfer Width
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_ADDMOD</name>
                            <description>Address change method selection on the MD side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SEL</name>
                            <description>MS Side Peripheral Selection
                                000: Select the memory peripheral
                                001: Select the peripheral that generates hsreq_ms[0].
                                010: Select the peripheral that generates hsreq_ms[1].
                                011: Select the peripheral that generates hsreq_ms[2].
                                100: Select the peripheral that generates hsreq_ms[3].
                                101: Select the peripheral that generates hsreq_ms[4].
                                110: Select the peripheral that generates hsreq_ms[5].
                                111: Select the peripheral that generates hsreq_ms[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SIZE</name>
                            <description>Bus transfer width on MS side
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_ADDMOD</name>
                            <description>Address change method selection on the MS side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH1MSADDR</name>
                    <description>CH1 source address register</description>
                    <addressOffset>0x128</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH1MDADDR</name>
                    <description>CH1 Destination Address Register</description>
                    <addressOffset>0x12C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH1_ST</name>
                    <description>CH1 status register</description>
                    <addressOffset>0x130</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CUR_LENTH</name>
                            <description>Number of current transfers</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH2CTR</name>
                    <description>CH2 control register</description>
                    <addressOffset>0x140</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1FFE</resetValue>
                    <fields>
                        <field>
                            <name>SWREQ</name>
                            <description>Requesting this channel to start transmission via software Write 1 Starting transmission
                                Note 1: Only used for requests initiated when the source address side is configured as a storage device.
                                Note 2: If LOOP is configured as 0, it will be automatically cleared by hardware upon completion of a transfer; if LOOP is configured as 1, it will be cleared by software control.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRI</name>
                            <description>channel prioritization
                                00: Low
                                01: Medium
                                10: High
                                11: Maximum
                                Note: If different channels are configured with the same priority, the one with the smaller channel number has the higher priority.</description>
                            <bitRange>[15:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOOP</name>
                            <description>Cycle mode control bit
                                0: Cyclic mode is not executed. Stop when transmission is completed
                                1: Execute the cyclic method. Automatically re-transmits according to the original configuration after the transmission is completed</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LENTH</name>
                            <description>Transmission Count Register, which indicates the number of requests transmitted on this channel. The actual number of transmissions is (LENTH+1). The unit of data for each transmission is: the unit of data on the source address side is determined by the MS_SIZE is determined; the data unit on the destination address side is determined by MD_SIZE.</description>
                            <bitRange>[12:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH_EN</name>
                            <description>Channel Enable Control
                                0: Channel closed
                                1: Channel effective
                                Note 1: Channel enable is written 1 by software to initiate a transmission. loop If configured as
                                0, a transmission is completed and automatically cleared by hardware; LOOP If configured as 1, it is cleared by software control.
                                Note 2: All configurations need to be done with enable off. When this bit is 1, the relevant configuration cannot be changed.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH2MOD</name>
                    <description>CH2 mode register</description>
                    <addressOffset>0x144</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MD_SEL</name>
                            <description>MD Side Peripheral Selection
                                000: Select storage peripheral
                                001: Select the peripheral that generates hsreq_md[0].
                                010: Select the peripheral that generates hsreq_md[1].
                                011: Select the peripheral that generates hsreq_md[2].
                                100: Select the peripheral that generates hsreq_md[3].
                                101: Select the peripheral that generates hsreq_md[4]
                                110: Select the peripheral that generates hsreq_md[5].
                                111: Select the peripheral that generates hsreq_md[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[13:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_SIZE</name>
                            <description>MD Side Bus Transfer Width
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_ADDMOD</name>
                            <description>Address change method selection on the MD side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SEL</name>
                            <description>MS Side Peripheral Selection
                                000: Select the memory peripheral
                                001: Select the peripheral that generates hsreq_ms[0].
                                010: Select the peripheral that generates hsreq_ms[1].
                                011: Select the peripheral that generates hsreq_ms[2].
                                100: Select the peripheral that generates hsreq_ms[3].
                                101: Select the peripheral that generates hsreq_ms[4].
                                110: Select the peripheral that generates hsreq_ms[5].
                                111: Select the peripheral that generates hsreq_ms[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SIZE</name>
                            <description>Bus transfer width on MS side
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_ADDMOD</name>
                            <description>Address change method selection on the MS side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH2MSADDR</name>
                    <description>CH2 source address register</description>
                    <addressOffset>0x148</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH2MDADDR</name>
                    <description>CH2 Destination Address Register</description>
                    <addressOffset>0x14c</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH2_ST</name>
                    <description>CH2 status register</description>
                    <addressOffset>0x150</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CUR_LENTH</name>
                            <description>Number of current transfers</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH3CTR</name>
                    <description>CH3 control register</description>
                    <addressOffset>0x160</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1FFE</resetValue>
                    <fields>
                        <field>
                            <name>SWREQ</name>
                            <description>Requesting this channel to start transmission via software Write 1 Starting transmission
                                Note 1: Only used for requests initiated when the source address side is configured as a storage device.
                                Note 2: If LOOP is configured as 0, it will be automatically cleared by hardware upon completion of a transfer; if LOOP is configured as 1, it will be cleared by software control.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRI</name>
                            <description>channel prioritization
                                00: Low
                                01: Medium
                                10: High
                                11: Maximum
                                Note: If different channels are configured with the same priority, the one with the smaller channel number has the higher priority.</description>
                            <bitRange>[15:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOOP</name>
                            <description>Cycle mode control bit
                                0: Cyclic mode is not executed. Stop when transmission is completed
                                1: Execute the cyclic method. Automatically re-transmits according to the original configuration after the transmission is completed</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LENTH</name>
                            <description>Transmission Count Register, which indicates the number of requests transmitted on this channel. The actual number of transmissions is (LENTH+1). The unit of data for each transmission is: the unit of data on the source address side is determined by the MS_SIZE is determined; the data unit on the destination address side is determined by MD_SIZE.</description>
                            <bitRange>[12:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH_EN</name>
                            <description>Channel Enable Control
                                0: Channel closed
                                1: Channel effective
                                Note 1: Channel enable is written 1 by software to initiate a transmission. loop If configured as
                                0, a transmission is completed and automatically cleared by hardware; LOOP If configured as 1, it is cleared by software control.
                                Note 2: All configurations need to be done with enable off. When this bit is 1, the relevant configuration cannot be changed.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH3MOD</name>
                    <description>CH3 mode register</description>
                    <addressOffset>0x164</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MD_SEL</name>
                            <description>MD Side Peripheral Selection
                                000: Select storage peripheral
                                001: Select the peripheral that generates hsreq_md[0].
                                010: Select the peripheral that generates hsreq_md[1].
                                011: Select the peripheral that generates hsreq_md[2].
                                100: Select the peripheral that generates hsreq_md[3].
                                101: Select the peripheral that generates hsreq_md[4]
                                110: Select the peripheral that generates hsreq_md[5].
                                111: Select the peripheral that generates hsreq_md[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[13:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_SIZE</name>
                            <description>MD Side Bus Transfer Width
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MD_ADDMOD</name>
                            <description>Address change method selection on the MD side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SEL</name>
                            <description>MS Side Peripheral Selection
                                000: Select the memory peripheral
                                001: Select the peripheral that generates hsreq_ms[0].
                                010: Select the peripheral that generates hsreq_ms[1].
                                011: Select the peripheral that generates hsreq_ms[2].
                                100: Select the peripheral that generates hsreq_ms[3].
                                101: Select the peripheral that generates hsreq_ms[4].
                                110: Select the peripheral that generates hsreq_ms[5].
                                111: Select the peripheral that generates hsreq_ms[6].
                                Note 1: A configuration of 000 indicates the selection of a memory peripheral, usually the SRAM within the chip. It can also be used for other peripherals that are accessible without handshaking or waiting. Other peripherals that can be accessed without handshaking or waiting can also be used.
                                Note 2: When the configuration is 001-111, the peripherals connected to different chips are different. The corresponding peripherals should be decided according to the actual peripherals connected to the specific chip.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_SIZE</name>
                            <description>Bus transfer width on MS side
                                00: 8bits
                                01: 16bits
                                10: 32bits</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MS_ADDMOD</name>
                            <description>Address change method selection on the MS side
                                0: Address unchanged
                                1: Address increment</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>DMA_CH3MSADDR</name>
                    <description>CH3 source address register</description>
                    <addressOffset>0x168</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH3MDADDR</name>
                    <description>CH3 Destination Address Register</description>
                    <addressOffset>0x16c</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>DMA_CH3_ST</name>
                    <description>CH3 status register</description>
                    <addressOffset>0x170</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CUR_LENTH</name>
                            <description>Number of current transfers</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>CRC</name>
            <description>Cyclic redundancy check calculation unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40003000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>CRC_CR</name>
                    <description>CRC control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CRC_SEL</name>
                            <description>CRC Algorithm Selection Register
                                00: x^16+x^12+x^5+1
                                01: x^8+x^2+x+1
                                10: x^16+x^15+x^2+1
                                11: x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x^1+1</description>
                            <bitRange>[10:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DATA_WIDTH</name>
                            <description>CRC Input Data Valid Bits Register
                                00: 32-bit input data valid
                                01: Low 16-bit input data valid
                                10: Low 8-bit input data valid</description>
                            <bitRange>[8:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OUTPUT_INV</name>
                            <description>Output Data Flip-Flop Register Flip-Flop Rule Same as INPUT_INV</description>
                            <bitRange>[6:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OUTPUT_REV</name>
                            <description>Whether the output data is inverted or not
                                1: Inversion of output data
                                0: Output data is not inverted</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>INPUT_INV</name>
                            <description>Input data flip-flop register
                                00: bit order unchanged
                                01: bit order completely flipped</description>
                            <bitRange>[3:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>INPUT_REV</name>
                            <description>Whether the input data is inverted or not
                                1: Input data inversion
                                0: Input data is not inverted</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CRC_EN</name>
                            <description>CRC enable bit
                                1: CRC Enable
                                0: CRC not enabled</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>CRC_IV</name>
                    <description>CRC initial value register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>CRC_DATAIN</name>
                    <description>CRC input data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>CRC_DATAOUT</name>
                    <description>CRC output data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>GPIOA</name>
            <description>GPIOA unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40060000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>GPIOA</name>
                <value>29</value>
            </interrupt>
            <interrupt>
                <name>GPIOA5</name>
                <value>22</value>
            </interrupt>
            <interrupt>
                <name>GPIOA6</name>
                <value>23</value>
            </interrupt>
            <interrupt>
                <name>GPIOA7</name>
                <value>24</value>
            </interrupt>
            <registers>
                <register>
                    <name>GPIOA_DATA</name>
                    <description>GPIO DATA register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_DIR</name>
                    <description>GPIO Pin direction</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTLVLTRG</name>
                    <description>GPIO Pin interrupt sensitive conditions</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTBE</name>
                    <description>GPIO Pin edge trigger mode</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTRISEEN</name>
                    <description>GPIO Pin interrupt event mode</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTEN</name>
                    <description>GPIO Pin interrupt enable</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTRAWSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO interrupt trigger</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO pin generation int</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOA_INTCLR</name>
                    <description>Clear the corresponding bitGPIOsPin edge triggered interrupt flag</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>GPIOB</name>
            <description>GPIOB unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40060800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>GPIOB</name>
                <value>30</value>
            </interrupt>
            <interrupt>
                <name>GPIOB0</name>
                <value>5</value>
            </interrupt>
            <interrupt>
                <name>GPIOB1</name>
                <value>26</value>
            </interrupt>
            <registers>
                <register>
                    <name>GPIOB_DATA</name>
                    <description>GPIO DATA register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_DIR</name>
                    <description>GPIO Pin direction</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTLVLTRG</name>
                    <description>GPIO Pin interrupt sensitive conditions</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTBE</name>
                    <description>GPIO Pin edge trigger mode</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTRISEEN</name>
                    <description>GPIO Pin interrupt event mode</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTEN</name>
                    <description>GPIO Pin interrupt enable</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTRAWSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO interrupt trigger</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO pin generation int</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOB_INTCLR</name>
                    <description>Clear the corresponding bitGPIOsPin edge triggered interrupt flag</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>GPIOC</name>
            <description>GPIOC unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40061000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>GPIOC</name>
                <value>31</value>
            </interrupt>
            <interrupt>
                <name>GPIOC0</name>
                <value>27</value>
            </interrupt>
            <interrupt>
                <name>GPIOC1</name>
                <value>28</value>
            </interrupt>
            <registers>
                <register>
                    <name>GPIOC_DATA</name>
                    <description>GPIO DATA register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_DIR</name>
                    <description>GPIO Pin direction</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTLVLTRG</name>
                    <description>GPIO Pin interrupt sensitive conditions</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTBE</name>
                    <description>GPIO Pin edge trigger mode</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTRISEEN</name>
                    <description>GPIO Pin interrupt event mode</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTEN</name>
                    <description>GPIO Pin interrupt enable</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTRAWSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO interrupt trigger</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTSTAUS</name>
                    <description>Indicates that the corresponding bit is detectedGPIO pin generation int</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
                <register>
                    <name>GPIOC_INTCLR</name>
                    <description>Clear the corresponding bitGPIOsPin edge triggered interrupt flag</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>TIMER_BASE0</name>
            <description>TIMER_BASE0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40064000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>TIMER_BASE0</name>
                <value>5</value>
            </interrupt>
            <registers>
                <register>
                    <name>TIMERBASE0_EN</name>
                    <description>TIMER enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_EN</name>
                            <description>TIMERBASE HIGH Timer Enable Register</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EN</name>
                            <description>TIMERBASE LOW Timer Enable Register</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_DIV</name>
                    <description>TIMER Count Clock Divider Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DIV</name>
                            <description>TIMERBASE Count Clock Prescaler Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_IE</name>
                    <description>TIMER interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IE</name>
                            <description>TIMERBASE HIGH Timer Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IE</name>
                            <description>TIMERBASE LOW Timer Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_IF</name>
                    <description>TIMER Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IF</name>
                            <description>TIMERBASE HIGH Timer Interrupt Status Write 1 to clear the status.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IF</name>
                            <description>TIMERBASE LOW Timer Interrupt Status Write 1 to Clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_HIGH_LOAD</name>
                    <description>TIMER HIGH target configuration register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_LOAD</name>
                            <description>TIMERBASE HIGH Timer Target Configuration Register When the high 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_HIGH_CNT</name>
                    <description>TIMER HIGH Current count value register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CNT</name>
                            <description>TIMERBASE HIGH Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_LOW_LOAD</name>
                    <description>TIMER LOW target configuration register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>LOW_LOAD</name>
                            <description>TIMERBASE LOW Timer Target Configuration Register When the low 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE0_LOW_CNT</name>
                    <description>TIMER LOW Current count value register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CNT</name>
                            <description>TIMERBASE LOW Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>TIMER_BASE1</name>
            <description>TIMER_BASE1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40064800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>TIMER_BASE1</name>
                <value>6</value>
            </interrupt>
            <registers>
                <register>
                    <name>TIMERBASE1_EN</name>
                    <description>TIMER enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_EN</name>
                            <description>TIMERBASE HIGH Timer Enable Register</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EN</name>
                            <description>TIMERBASE LOW Timer Enable Register</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_DIV</name>
                    <description>TIMER Count Clock Divider Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DIV</name>
                            <description>TIMERBASE Count Clock Prescaler Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_IE</name>
                    <description>TIMER interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IE</name>
                            <description>TIMERBASE HIGH Timer Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IE</name>
                            <description>TIMERBASE LOW Timer Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_IF</name>
                    <description>TIMER Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IF</name>
                            <description>TIMERBASE HIGH Timer Interrupt Status Write 1 to clear the status.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IF</name>
                            <description>TIMERBASE LOW Timer Interrupt Status Write 1 to Clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_HIGH_LOAD</name>
                    <description>TIMER HIGH target configuration register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_LOAD</name>
                            <description>TIMERBASE HIGH Timer Target Configuration Register When the high 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_HIGH_CNT</name>
                    <description>TIMER HIGH Current count value register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CNT</name>
                            <description>TIMERBASE HIGH Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_LOW_LOAD</name>
                    <description>TIMER LOW target configuration register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>LOW_LOAD</name>
                            <description>TIMERBASE LOW Timer Target Configuration Register When the low 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE1_LOW_CNT</name>
                    <description>TIMER LOW Current count value register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CNT</name>
                            <description>TIMERBASE LOW Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>TIMER_BASE2</name>
            <description>TIMER_BASE2 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40065000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>TIMER_BASE2</name>
                <value>21</value>
            </interrupt>
            <registers>
                <register>
                    <name>TIMERBASE2_EN</name>
                    <description>TIMER enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_EN</name>
                            <description>TIMERBASE HIGH Timer Enable Register</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EN</name>
                            <description>TIMERBASE LOW Timer Enable Register</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_DIV</name>
                    <description>TIMER Count Clock Divider Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DIV</name>
                            <description>TIMERBASE Count Clock Prescaler Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_IE</name>
                    <description>TIMER interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IE</name>
                            <description>TIMERBASE HIGH Timer Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IE</name>
                            <description>TIMERBASE LOW Timer Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_IF</name>
                    <description>TIMER Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_IF</name>
                            <description>TIMERBASE HIGH Timer Interrupt Status Write 1 to clear the status.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_IF</name>
                            <description>TIMERBASE LOW Timer Interrupt Status Write 1 to Clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_HIGH_LOAD</name>
                    <description>TIMER HIGH target configuration register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_LOAD</name>
                            <description>TIMERBASE HIGH Timer Target Configuration Register When the high 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_HIGH_CNT</name>
                    <description>TIMER HIGH Current count value register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CNT</name>
                            <description>TIMERBASE HIGH Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_LOW_LOAD</name>
                    <description>TIMER LOW target configuration register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>LOW_LOAD</name>
                            <description>TIMERBASE LOW Timer Target Configuration Register When the low 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERBASE2_LOW_CNT</name>
                    <description>TIMER LOW Current count value register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CNT</name>
                            <description>TIMERBASE LOW Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>TIMER_PLUS0</name>
            <description>TIMER_PLUS0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40067000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>TIMER_PLUS0</name>
                <value>7</value>
            </interrupt>
            <registers>
                <register>
                    <name>TIMERPLUS0_EN</name>
                    <description>TIMERPLUS enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIMERPLUS_HIGH_EN</name>
                            <description>TIMERPLUS High 16bit Timer Enable Register
                                0: Forbidden Energy
                                1: Enabling</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMERPLUS_LOW_EN</name>
                            <description>TIMERPLUS Low 16bit Timer Enable Register
                                0: Forbidden Energy
                                1: Enabling</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_DIV</name>
                    <description>TIMERPLUS Count Clock Prescaler Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIMERPLUS_DIV</name>
                            <description>TIMERPLUS Count Clock Divider Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_CTR</name>
                    <description>TIMERPLUS configuration register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x600060</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_DMA_EN</name>
                            <description>DMA Read TIMER HIGH Capture Value Enable
                                0: CPU reads the captured value
                                1: DMA Read Capture Value</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PO_MD</name>
                            <description>TIMER HIGH Periodic Pulse Output Enable
                                0: Output off
                                1: Output enable</description>
                            <bitRange>[23:23]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_EXT_EDGE</name>
                            <description>TIMER HIGH Count mode or input capture mode input signal active edge selection
                                00: Rising edge active
                                01: Falling edge active
                                10: Rising or falling edge valid</description>
                            <bitRange>[22:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_EXT_SEL</name>
                            <description>TIMER HIGH Count mode or input capture mode input signal selection
                                0: timer_in0
                                1: timer_in1</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_CLKSEL</name>
                            <description>TIMER HIGH Count Clock Source Selection
                                00: PCLK/PREDIV (selects pclk pre-divided clock)
                                01: CNTSRC0
                                10: CNTSRC1</description>
                            <bitRange>[19:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_MODE</name>
                            <description>TIMER HIGH Operating Mode Register
                                00: Timing mode (can generate periodic pulse output signal)
                                01: Count mode (only pclk can be selected for count clock)
                                10: Input capture mode</description>
                            <bitRange>[17:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_DMA_EN</name>
                            <description>DMA Read TIMER LOW Capture Value Enable
                                0: CPU reads the captured value
                                1: DMA Read Capture Value</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PO_MD</name>
                            <description>TIMER LOW Periodic Pulse Output Enable
                                0: Output off
                                1: Output enable</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EXT_EDGE</name>
                            <description>TIMER LOW Count mode or input capture mode Input signal active edge selection
                                00: Rising edge active
                                01: Falling edge active
                                10: Rising or falling edge valid</description>
                            <bitRange>[6:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EXT_SEL</name>
                            <description>TIMER LOW Count Mode or Input Capture Mode Input Signal Selection
                                0: timer_in0
                                1: timer_in1</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_CLKSEL</name>
                            <description>TIMER LOW Count Clock Source Selection
                                00: PCLK/PREDIV (selects pclk pre-divided clock)
                                01: CNTSRC0
                                10: CNTSRC1</description>
                            <bitRange>[3:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_MODE</name>
                            <description>TIMER LOW Operating Mode Register
                                00: Timing mode (can generate periodic pulse output signal)
                                01: Count mode (only pclk can be selected for count clock)
                                10: Input capture mode
                                11: HALL mode</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_IE</name>
                    <description>TIMERPLUS interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_F_IE</name>
                            <description>HALL2 Falling edge interrupt enable</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL2_R_IE</name>
                            <description>HALL2 rising edge interrupt enable</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL1_F_IE</name>
                            <description>HALL1 Falling edge interrupt enable</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL1_R_IE</name>
                            <description>HALL1 rising edge interrupt enable</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL0_F_IE</name>
                            <description>HALL0 Falling edge interrupt enable</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL0_R_IE</name>
                            <description>HALL0 rising edge interrupt enable</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PF_IE</name>
                            <description>TIMERPLUS HIGH Input pulse falling edge interrupt enable</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PR_IE</name>
                            <description>TIMERPLUS HIGH Input pulse rising edge interrupt enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_TO_IE</name>
                            <description>TIMERPLUS HIGH Reach target value interrupt enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PF_IE</name>
                            <description>TIMERPLUS LOW Input pulse falling edge interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PR_IE</name>
                            <description>TIMERPLUS LOW Input pulse rising edge interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_TO_IE</name>
                            <description>TIMERPLUS LOW Reach target value interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_IF</name>
                    <description>TIMERPLUS Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_F_IF</name>
                            <description>HALL2 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL2_R_IF</name>
                            <description>HALL2 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL1_F_IF</name>
                            <description>HALL1 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL1_R_IF</name>
                            <description>HALL1 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL0_F_IF</name>
                            <description>HALL0 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL0_R_IF</name>
                            <description>HALL0 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_PF_IF</name>
                            <description>TIMERPLUS HIGH Input pulse falling edge interrupt status write 1 clear</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_PR_IF</name>
                            <description>TIMERPLUS HIGH Input pulse rising edge interrupt status write 1 clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_TO_IF</name>
                            <description>TIMERPLUS HIGH Reach target value Interrupt status write 1 clear</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_PF_IF</name>
                            <description>TIMERPLUS LOW Input pulse falling edge interrupt status write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_PR_IF</name>
                            <description>TIMERPLUS LOW Input pulse rising edge interrupt status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_TO_IF</name>
                            <description>TIMERPLUS LOW Reach target value Interrupt status write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_HIGH_GOAL</name>
                    <description>TIMERPLUS HIGH target configuration register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_LOAD</name>
                            <description>TIMERPLUS HIGH Timer Target Configuration Register When the high 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_HIGH_CNT</name>
                    <description>TIMERPLUS HIGH Current count value register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CNT</name>
                            <description>TIMERPLUS HIGH Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_HIGH_CVAL</name>
                    <description>TIMERPLUS HIGH capture value register</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CVAL</name>
                            <description>TIMERPLUS HIGH Capture value count value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_LOW_GOAL</name>
                    <description>TIMERPLUS LOW target configuration register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>LOW_LOAD</name>
                            <description>TIMERPLUS LOW Timer Target Configuration Register When the low 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_LOW_CNT</name>
                    <description>TIMERPLUS LOW Current count value register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CNT</name>
                            <description>TIMERPLUS LOW Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_LOW_CVAL</name>
                    <description>TIMERPLUS HIGH capture value register</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CVAL</name>
                            <description>TIMERPLUS LOW Capture value count value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS0_HALL_VAL</name>
                    <description>HALL Signal Raw Value Register</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_VAL</name>
                            <description>Raw signal level of HALL2</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HALL1_VAL</name>
                            <description>Raw signal level of HALL1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HALL0_VAL</name>
                            <description>Raw signal level of HALL0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>TIMER_PLUS1</name>
            <description>TIMER_PLUS1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40067800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>TIMER_PLUS1</name>
                <value>8</value>
            </interrupt>
            <registers>
                <register>
                    <name>TIMERPLUS1_EN</name>
                    <description>TIMERPLUS enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIMERPLUS_HIGH_EN</name>
                            <description>TIMERPLUS High 16bit Timer Enable Register
                                0: Forbidden Energy
                                1: Enabling</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TIMERPLUS_LOW_EN</name>
                            <description>TIMERPLUS Low 16bit Timer Enable Register
                                0: Forbidden Energy
                                1: Enabling</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_DIV</name>
                    <description>TIMERPLUS Count Clock Prescaler Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIMERPLUS_DIV</name>
                            <description>TIMERPLUS Count Clock Divider Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_CTR</name>
                    <description>TIMERPLUS configuration register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x600060</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_DMA_EN</name>
                            <description>DMA Read TIMER HIGH Capture Value Enable
                                0: CPU reads the captured value
                                1: DMA Read Capture Value</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PO_MD</name>
                            <description>TIMER HIGH Periodic Pulse Output Enable
                                0: Output off
                                1: Output enable</description>
                            <bitRange>[23:23]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_EXT_EDGE</name>
                            <description>TIMER HIGH Count mode or input capture mode input signal active edge selection
                                00: Rising edge active
                                01: Falling edge active
                                10: Rising or falling edge valid</description>
                            <bitRange>[22:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_EXT_SEL</name>
                            <description>TIMER HIGH Count mode or input capture mode input signal selection
                                0: timer_in0
                                1: timer_in1</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_CLKSEL</name>
                            <description>TIMER HIGH Count Clock Source Selection
                                00: PCLK/PREDIV (selects pclk pre-divided clock)
                                01: CNTSRC0
                                10: CNTSRC1</description>
                            <bitRange>[19:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_MODE</name>
                            <description>TIMER HIGH Operating Mode Register
                                00: Timing mode (can generate periodic pulse output signal)
                                01: Count mode (only pclk can be selected for count clock)
                                10: Input capture mode</description>
                            <bitRange>[17:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_DMA_EN</name>
                            <description>DMA Read TIMER LOW Capture Value Enable
                                0: CPU reads the captured value
                                1: DMA Read Capture Value</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PO_MD</name>
                            <description>TIMER LOW Periodic Pulse Output Enable
                                0: Output off
                                1: Output enable</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EXT_EDGE</name>
                            <description>TIMER LOW Count mode or input capture mode Input signal active edge selection
                                00: Rising edge active
                                01: Falling edge active
                                10: Rising or falling edge valid</description>
                            <bitRange>[6:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_EXT_SEL</name>
                            <description>TIMER LOW Count Mode or Input Capture Mode Input Signal Selection
                                0: timer_in0
                                1: timer_in1</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_CLKSEL</name>
                            <description>TIMER LOW Count Clock Source Selection
                                00: PCLK/PREDIV (selects pclk pre-divided clock)
                                01: CNTSRC0
                                10: CNTSRC1</description>
                            <bitRange>[3:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_MODE</name>
                            <description>TIMER LOW Operating Mode Register
                                00: Timing mode (can generate periodic pulse output signal)
                                01: Count mode (only pclk can be selected for count clock)
                                10: Input capture mode
                                11: HALL mode</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_IE</name>
                    <description>TIMERPLUS interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_F_IE</name>
                            <description>HALL2 Falling edge interrupt enable</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL2_R_IE</name>
                            <description>HALL2 rising edge interrupt enable</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL1_F_IE</name>
                            <description>HALL1 Falling edge interrupt enable</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL1_R_IE</name>
                            <description>HALL1 rising edge interrupt enable</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL0_F_IE</name>
                            <description>HALL0 Falling edge interrupt enable</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HALL0_R_IE</name>
                            <description>HALL0 rising edge interrupt enable</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PF_IE</name>
                            <description>TIMERPLUS HIGH Input pulse falling edge interrupt enable</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_PR_IE</name>
                            <description>TIMERPLUS HIGH Input pulse rising edge interrupt enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HIGH_TO_IE</name>
                            <description>TIMERPLUS HIGH Reach target value interrupt enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PF_IE</name>
                            <description>TIMERPLUS LOW Input pulse falling edge interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_PR_IE</name>
                            <description>TIMERPLUS LOW Input pulse rising edge interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LOW_TO_IE</name>
                            <description>TIMERPLUS LOW Reach target value interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_IF</name>
                    <description>TIMERPLUS Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_F_IF</name>
                            <description>HALL2 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL2_R_IF</name>
                            <description>HALL2 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL1_F_IF</name>
                            <description>HALL1 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL1_R_IF</name>
                            <description>HALL1 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL0_F_IF</name>
                            <description>HALL0 Falling edge interrupt status write 1 clear</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HALL0_R_IF</name>
                            <description>HALL0 Rising edge interrupt status write 1 clear</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_PF_IF</name>
                            <description>TIMERPLUS HIGH Input pulse falling edge interrupt status write 1 clear</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_PR_IF</name>
                            <description>TIMERPLUS HIGH Input pulse rising edge interrupt status write 1 clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HIGH_TO_IF</name>
                            <description>TIMERPLUS HIGH Reach target value Interrupt status write 1 clear</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_PF_IF</name>
                            <description>TIMERPLUS LOW Input pulse falling edge interrupt status write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_PR_IF</name>
                            <description>TIMERPLUS LOW Input pulse rising edge interrupt status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>LOW_TO_IF</name>
                            <description>TIMERPLUS LOW Reach target value Interrupt status write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_HIGH_GOAL</name>
                    <description>TIMERPLUS HIGH target configuration register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_LOAD</name>
                            <description>TIMERPLUS HIGH Timer Target Configuration Register When the high 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_HIGH_CNT</name>
                    <description>TIMERPLUS HIGH Current count value register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CNT</name>
                            <description>TIMERPLUS HIGH Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_HIGH_CVAL</name>
                    <description>TIMERPLUS HIGH capture value register</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HIGH_CVAL</name>
                            <description>TIMERPLUS HIGH Capture value count value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_LOW_GOAL</name>
                    <description>TIMERPLUS LOW target configuration register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>LOW_LOAD</name>
                            <description>TIMERPLUS LOW Timer Target Configuration Register When the low 16bit counter counts up to the set value, the corresponding status signal is generated.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_LOW_CNT</name>
                    <description>TIMERPLUS LOW Current count value register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CNT</name>
                            <description>TIMERPLUS LOW Timer Current Count Value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_LOW_CVAL</name>
                    <description>TIMERPLUS HIGH capture value register</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOW_CVAL</name>
                            <description>TIMERPLUS LOW Capture value count value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TIMERPLUS1_HALL_VAL</name>
                    <description>HALL Signal Raw Value Register</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>HALL2_VAL</name>
                            <description>Raw signal level of HALL2</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HALL1_VAL</name>
                            <description>Raw signal level of HALL1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HALL0_VAL</name>
                            <description>Raw signal level of HALL0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>RTC</name>
            <description>RTC unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x40069000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>RTC</name>
                <value>2</value>
            </interrupt>
            <registers>
                <register>
                    <name>RTC_CFG</name>
                    <description>RTC configuration register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>LOAD_EN</name>
                            <description>RTC Load Register RTC_TR and RTC_DR Time Setting Value
                                1: Load the value set in the registers, hardware auto zeroing
                                0: The value set in the register is not loaded
                                Note: It is recommended to check RTC_IF after RTC_TR and RTC_DR have been configured. TIME_ ERR bit to 0, then turn this bit on again</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>ALM_EN</name>
                            <description>RTC Alarm Clock Function Enable Bit
                                1: Turn on the alarm clock function, only when ALM_WEEKDAY is 0, this bit is automatically cleared by the hardware
                                0: Turn off the alarm clock function
                                Note: It is recommended to check that the ALM_ERR bit of RTC_IF is 0 after RTC_AR is configured, and then turn this bit on again.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTC_EN</name>
                            <description>RTC enable bit
                                1: Open the RTC
                                0: Turn off RTC</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_IE</name>
                    <description>RTC interrupt enable register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MS_IE</name>
                            <description>1/2 second interrupt enable bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_IE</name>
                            <description>Alarm clock interrupt enable bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DATE_IE</name>
                            <description>Day Interrupt Enable Bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>HOUR_IE</name>
                            <description>Hourly Interrupt Enable Bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MIN_IE</name>
                            <description>Minute Interrupt Enable Bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SEC_IE</name>
                            <description>Seconds Interrupt Enable Bit
                                1: Enabling
                                0: not enabled</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_IF</name>
                    <description>RTC status register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ALM_ERR</name>
                            <description>Alarm Setting Valid Flag Bits
                                1: Wrong alarm setting
                                0: Alarm clock set correctly</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TIME_ERR</name>
                            <description>Time Setting Valid Flag Bit
                                1: Time setting error
                                0: Time set correctly</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>MS_IF</name>
                            <description>1/2 sec interrupt response, active high, write 1 clear</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>ALM_IF</name>
                            <description>Alarm Clock Interrupt Response, Active High, Write 1 Clear</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DATE_IF</name>
                            <description>Day Interrupt Response, Active High, Write 1 Clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>HOUR_IF</name>
                            <description>Hourly Interrupt Response, High Active, Write 1 Clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>MIN_IF</name>
                            <description>Minute Interrupt Response, Active High, Write 1 Clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SEC_IF</name>
                            <description>Interrupt Response in seconds, active high, write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_PRE</name>
                    <description>RTC prescaler register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x7FFF</resetValue>
                    <fields>
                        <field>
                            <name>PRE_PERIOD</name>
                            <description>Fractional calculation cycle selection
                                0:8 seconds
                                1:16 seconds</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRE_DECIMAL</name>
                            <description>prescaled decimal fraction
                                0: indicates no decimal</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PRE_ROUND</name>
                            <description>prescaled integer part The count value is the configured value plus 1</description>
                            <bitRange>[19:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_TR</name>
                    <description>RTC time register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BCD_WEEK</name>
                            <description>Setting the day of the week for the time, 0-6 is legal data.
                                0: Sunday
                                1: Monday
                                2: Tuesday
                                3: Wednesday
                                4: Thursday
                                5: Friday
                                6: Saturday</description>
                            <bitRange>[26:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_HOUR_DEC</name>
                            <description>Ten digits (decimal) of the hour to which the set time belongs, 0-2 valid</description>
                            <bitRange>[21:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_HOUR</name>
                            <description>Set the number of digits (decimal) of the hour to which the time belongs, 0-9 is valid</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_MIN_DEC</name>
                            <description>Ten digits (decimal) of the minute to which the set time belongs, 0-5 valid</description>
                            <bitRange>[14:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_MIN</name>
                            <description>Set the number of digits (decimal) of the minute to which the time belongs, 0-9 valid</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_SEC_DEC</name>
                            <description>Ten digits (decimal) of the second to which the set time belongs, 0-5 valid</description>
                            <bitRange>[6:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_SEC</name>
                            <description>Setting the number of digits (decimal) of the second to which the time belongs, 0-9 is valid</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_DR</name>
                    <description>RTC date register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x101</resetValue>
                    <fields>
                        <field>
                            <name>BCD_YEAR_DEC</name>
                            <description>Set the ten digits (decimal) of the month to which the time belongs, 0-1 is valid</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_YEAR</name>
                            <description>Sets the number of digits (decimal) of the month to which the time belongs, 0-9 is valid</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_MONTH_DEC</name>
                            <description>Set the ten digits (decimal)of the month to which the time belongs, 0-1 is valid</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_MONTH</name>
                            <description>Sets the number of digits (decimal) of the month to which the time belongs, 0-9 is valid</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_DATE_DEC</name>
                            <description>Set the ten digits (decimal) of the date to which the time belongs, 0-3 valid</description>
                            <bitRange>[5:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BCD_DATE</name>
                            <description>Set the number of digits (decimal) of the date to which the time belongs, 0-9 is valid</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_AR</name>
                    <description>RTC alarm clock register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ALM_WEEKDAY</name>
                            <description>The week of the alarm time, each bit indicates one of the days of the week. bit0=1: Sunday bit1=1: Monday bit2=1: Tuesday bit3=1: Wednesday bit4=1: Thursday bit5=1: Friday bit6=1: Saturday
                                Note: With all zeros, the alarm responds only once; with other values, the alarm</description>
                            <bitRange>[30:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_HOUR_DEC</name>
                            <description>Ten digits of the hour to which the alarm time belongs (decimal), 0-2 Valid</description>
                            <bitRange>[21:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_HOUR</name>
                            <description>Number of digits (decimal)of the hour to which the alarm time belongs, 0-9 valid</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_MIN_DEC</name>
                            <description>en digits of the minute to which the alarm time belongs (decimal), 0-5 valid</description>
                            <bitRange>[14:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_MIN</name>
                            <description>Single digit (decimal)of the minute to which the alarm time belongs, valid from 0 to 9</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_SEC_DEC</name>
                            <description>Ten digits of the second to which the alarm time belongs (decimal), 0-5 valid</description>
                            <bitRange>[6:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ALM_SEC</name>
                            <description>Number of digits (decimal)of the second to which the alarm time belongs, 0-9 valid</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_TSTR</name>
                    <description>RTC current time register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>WEEKDAY</name>
                            <description>The week of the current time, 0-6 are legal data.
                                0: Sunday
                                1: Monday
                                2: Tuesday
                                3: Wednesday
                                4: Thursday
                                5: Friday
                                6: Saturday</description>
                            <bitRange>[26:24]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HOUR_DEC</name>
                            <description>Ten digits of the hour to which the current time belongs (decimal), 0-2 valid</description>
                            <bitRange>[21:20]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>HOUR</name>
                            <description>The number of digits (decimal) of the hour to which the current time belongs, 0-9 is valid</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>MIN_DEC</name>
                            <description>Ten digits (decimal) of the minute to which the current time belongs, 0-5 valid</description>
                            <bitRange>[14:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>MIN</name>
                            <description>The number of digits (decimal)of the minute to which the current time belongs, valid from 0 to 9</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SEC_DEC</name>
                            <description>Ten digits of the second to which the current time belongs (decimal), 0-5 valid</description>
                            <bitRange>[6:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SEC</name>
                            <description>Number of digits (decimal)of the second to which the current time belongs, 0-9 valid</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_TSDR</name>
                    <description>RTC current date register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x101</resetValue>
                    <fields>
                        <field>
                            <name>LEAPYEAR</name>
                            <bitRange>[24:24]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>YEAR_DEC</name>
                            <description>Ten digits (decimal)of the year to which the current time belongs, 0-9 valid</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>YEAR</name>
                            <description>Number of digits (decimal)of the chronological year to which the current time belongs, 0-9 valid</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>MONTH_DEC</name>
                            <description>Ten digits of the month to which the current time belongs (decimal), 0-1 valid</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>MONTH</name>
                            <description>The number of digits (decimal) of the month to which the current time belongs, 0-9 Valid</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>DATE_DEC</name>
                            <description>Ten digits (decimal)of the date to which the current time belongs, 0-3 valid</description>
                            <bitRange>[5:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>DATE</name>
                            <description>Number of digits (decimal)of the date to which the current time belongs, 0-9 valid</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_CNT</name>
                    <description>RTC current count value of the second scale</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CNT_20</name>
                            <description>20bit counting bits</description>
                            <bitRange>[19:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RTC_VALID</name>
                    <description>RTC Current Time Valid Flag Register</description>
                    <addressOffset>0x2C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CUR_VALID</name>
                            <description>Current time valid flag When this bit is judged to be 1, the current time register can be read. (RTC_TSTR, RTC_TSDR, RTC_CNT)</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>IWDT</name>
            <description>IWDT unit</description>
            <groupName>IWDT</groupName>
            <baseAddress>0x4006A000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>IWDT</name>
                <value>1</value>
            </interrupt>
            <registers>
                <register>
                    <name>IWDT_LOAD</name>
                    <description>IWDT initial value register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>IWDTLOAD</name>
                            <description>Initial value configuration register for the IWDT counter. When the IWDT starts, the counter is automatically loaded with the IWDTLOAD value and starts counting down. When the counter value reaches 0, the hardware automatically reloads the value in the IWDTLOAD register into the counter to continue the decremental count. When the first count reaches 0, an interrupt is generated. If the dog is not fed, the count is reduced to 0 again, and a reset is generated.</description>
                            <bitRange>[19:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IWDT_CTRL</name>
                    <description>IWDT control register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>INTEN</name>
                            <description>IWDT interrupt enable bit
                                1: Enabling
                                0: Prohibited</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>IWDTEN</name>
                            <description>IWDT start bit
                                1: Initiate IWDT counting
                                0: Stop counting</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IWDT_IF</name>
                    <description>IWDT status register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IWDT_IF</name>
                            <description>IWDT status bit, count to 0, high valid hardware set, software write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IWDT_FEED</name>
                    <description>IWDT feeding dog register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>FEED</name>
                            <description>IWDT Restart Counter Registers Writing 0x55 to this register restarts the IWDT counter (feed dog operation)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>WWDT</name>
            <description>WWDT unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x4006A800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>WWDT</name>
                <value>0</value>
            </interrupt>
            <registers>
                <register>
                    <name>WWDT_LOAD</name>
                    <description>WWDT initial value register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x40</resetValue>
                    <fields>
                        <field>
                            <name>RST_LOAD</name>
                            <description>Window Reset Comparison Value Register
                                Note 1: A reset can be generated when the watchdog counts down to the value
                                Note 2: The watchdog can generate an interrupt when it counts down to this value plus one.</description>
                            <bitRange>[13:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>INT_LOAD</name>
                            <description>Window Interrupt Compare Value Register
                                Note 1: When configuring, the window interrupt comparison value must be greater than the window reset comparison value.
                                Note 2: The watchdog can generate an interrupt when it counts down to this value.</description>
                            <bitRange>[6:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>WWDT_VALUE</name>
                    <description>WWDT Current count value register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x7F</resetValue>
                    <fields>
                        <field>
                            <name>VALUE</name>
                            <description>This register is a read-only register with a reset value of 0x7f. reading this register returns the current count value of the counter.</description>
                            <bitRange>[6:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>WWDT_CTRL</name>
                    <description>WWDT control register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PRERSTINTEN</name>
                            <description>Pre-reset interrupt enable bit
                                1: Enabling
                                0: Prohibited</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>INTEN</name>
                            <description>Window interrupt enable bit
                                1: Enabling
                                0: Prohibited</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CLKDIV</name>
                            <description>Watchdog Counter Count Clock Prescaling
                                00: Watchdog count clock 1 division
                                01: Watchdog count clock 2 divisions
                                10: Watchdog Count Clock 4 divisions
                                11: Watchdog Count Clock 8 divisions
                                Note: The watchdog count clock is a 4096 division of the system clock.</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EN</name>
                            <description>WWDT start bit
                                1: Initiate WWDT counting
                                0: stop counting</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>WWDT_IF</name>
                    <description>WWDT Interrupt Status Register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PRERSTINT</name>
                            <description>Pre-reset interrupt flag bit (i.e. VALUE = RST_LOAD + 1)</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>WININT</name>
                            <description>Window interrupt flag bit (i.e., when VALUE = INT_LOAD), valid high</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>WWDT_FEED</name>
                    <description>WWDT feeding dog register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>FEED</name>
                            <description>WWDT Restart Counter Registers Writing 0x55 to this register will restart the WWDT counter (dog feeding operation)
                                Note: Feeding the dog will only take effect during the window period (INT_LOAD &gt; VALUE &gt; RST_LOAD), otherwise the dog feeding operation will generate a watchdog reset.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>UART0</name>
            <description>UART0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x4006B000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>UART0</name>
                <value>13</value>
            </interrupt>
            <registers>
                <register>
                    <name>UART0_CTRL</name>
                    <description>UART control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TX_DLY</name>
                            <description>Transmit delay time setting (used to set the transmission delay time between the last stop bit and the next start bit)
                                000: No delay
                                001: 1bit delay 010:
                                2bit delay
                                ......
                                111: 7bit delay</description>
                            <bitRange>[16:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDBIT</name>
                            <description>Automatic baud rate detection bit length configuration
                                11: 8-bit duration from the start bit to the first rising edge. Input data is 0x80.
                                10: 4-bit duration from the start bit to the first rising edge. The input data is 0x08.
                                01: 2-bit duration from the start bit to the first rising edge. Input data is 0x02.
                                00: 1-bit duration from the start bit to the first rising edge. The input data is 0x01.</description>
                            <bitRange>[13:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDEN</name>
                            <description>Auto baud rate detection enable
                                1: Automatic baud rate detection function enabled
                                0: Automatic baud rate detection function disabled This bit will be automatically cleared after the auto-detect is finished.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARMD</name>
                            <description>Parity mode selection
                                11: Standing 0
                                10: Standing 1
                                01: Even Check
                                00: odd calibration</description>
                            <bitRange>[8:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PAREN</name>
                            <description>Parity bit enable
                                1: with parity bit
                                0: without parity bit</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>NINEBIT</name>
                            <description>9bit data mode enable
                                1: 9bit data mode
                                0: 8bit data mode</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDMAEN</name>
                            <description>Send DMA Transmit Enable
                                1: Indicates the transmit data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the transmit data register of the UART.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXDMAEN</name>
                            <description>Receive DMA Transmit Enable
                                1: Indicates the receive data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the receive data register of the UART.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXEN</name>
                            <description>transmit enable bit
                                1: Send open. Sends the data stored in tx_fifo through uart_tx.
                                0: Transmit off. No data is sent. uart_tx signal is held at 1.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXEN</name>
                            <description>receive enable bit (computing)
                                1: Receive open. External data can be received via uart_rx
                                0: Receive off. Do not receive data from uart_rx</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UARTEN</name>
                            <description>UART Enable Bit
                                1: Enable UART Module
                                0: Disable UART module</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_BAUD</name>
                    <description>UART Baud Rate Configuration Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BAUD</name>
                            <description>Baud rate configuration data</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_TDR</name>
                    <description>UART write data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TDR</name>
                            <description>Write Data Register The data to be sent is written to the transmit FIFO through this register. When the data is ready to be sent, the shift register reads the transmit FIFO directly to send the data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_RDR</name>
                    <description>UART read data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RDR</name>
                            <description>The received data is read out through this register. The shift register stores data into the receive FIFO after each transmission is completed, and the data in the receive FIFO is read out through this register.
                                Note: If a parity bit error or a stop bit error occurs, the set of data will not be written to the RXFIFO.if the RXFIFO is not empty, the data in the RXFIFO is valid data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_IE</name>
                    <description>UART interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Auto baud rate detection function Counter overflow interrupt enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO overflow interrupt enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>Send the data stored in FIFO to reach the set water level Interrupt Enable</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>Receive data received in FIFO reaches the set water level Interrupt enable</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive timeout interrupt enable</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error interrupt enable for receive data</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARITYE</name>
                            <description>Receive data with parity error interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data sent interrupt enable (indicates that the data in the send shift register has been sent and there is no more data to be sent in the send data FIFO)</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_IF</name>
                    <description>UART Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x2400</resetValue>
                    <fields>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Send FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[22:20]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Receive FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[19:17]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXBUSY</name>
                            <description>Data transmission busy flag
                                1: Transmit FIFO is not empty, or there is data being sent.
                                0: Transmit FIFO is empty and there is no data being sent.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half full flag</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_FULL</name>
                            <description>Send FIFO full flag</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Send FIFO Empty Flag</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full flag</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full flag</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_EMPTY</name>
                            <description>Receive FIFO empty flag</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Automatic baud rate detection function Counter overflow flag
                                1: Counter overflow, detection failure
                                0: Counter not overflowed write 1 Clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO Overflow Flag Write 1 Clear
                                Note: Data after overflow will be discarded</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>When the data stored in the transmit FIFO reaches the set water level, the bit is
                                1, otherwise 0</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>When the data received in the receive FIFO reaches the set water level, the bit
                                1, otherwise 0</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Timeout Flag 1: Send Receive Timeout Write
                                1 Clear</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error in receive data Write 1 Clear The main point is that the stop bit is not received or recognized within the expected time period, then it is considered a stop bit error</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>PARRITYE</name>
                            <description>Parity error in received data 1 clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data transmission is complete (indicates that data transmission in the transmit shift register is complete and there is no pending data in the transmit data FIFO) Write 1 to clear the data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_FIFO</name>
                    <description>UART FIFO control register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x07</resetValue>
                    <fields>
                        <field>
                            <name>TF_CLR</name>
                            <description>TXFIFO clear enable Software Write 1 Clear Transmit FIFO, Hardware Auto Clear</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RF_CLR</name>
                            <description>RXFIFO clear enable Software Write 1 Clear Receive FIFO, Hardware Auto Clear</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Water level setting for TXFIFO generating interrupts
                                000: 0
                                001: 1
                                010:2
                                ......
                                111:7 Indicates that the number of data to be sent in the sending FIFO is not more than the water level setting. For example, if the value 011 is set, the corresponding signal is generated when the number of written data in TXFIFO is less than or equal to 3.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Water level setting for RXFIFO generating interrupts
                                000: 1
                                001: 2
                                010: 3
                                ......
                                111: 8 Indicates that the number of received data in the receive FIFO has reached at least the water level setting. For example, if the value 011 is set, the corresponding signal is generated when there are at least 4 data in the RXFIFO.</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_FC</name>
                    <description>UART Flow Control Configuration Register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RTS_SIGNAL</name>
                            <description>Indicates RTS status on the line
                                1: RTS is high
                                0: RTS is low</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CTS_SIGNAL</name>
                            <description>Indicates online CTS status
                                1: CTS is high
                                0: CTS is low</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RTSPOL</name>
                            <description>RTS Signal Polarity Configuration
                                1: When RTS signal is high, UART can receive data; when RTS signal is low, UART receive FIFO is full and can not receive data.
                                0: When RTS signal output is low, UART can receive data; when RTS signal output is high, UART receive FIFO is full and no more data can be received.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSPOL</name>
                            <description>CTS Signal Polarity Configuration
                                1: When the CTS signal input is high, the UART can send data; when the CTS signal input is low, the UART does not send data.
                                0: When CTS signal input is low, UART can send data; when CTS signal input is high, UART does not send data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTSEN</name>
                            <description>RTS flow control enable
                                1: RTS signaling plays a flow control role
                                0: RTS signal does not work</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSEN</name>
                            <description>CTS flow control enable
                                1: CTS signaling plays a flow control role
                                0: CTS signal does not work</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART0_RXTO</name>
                    <description>UART Receive Timeout Configuration Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFF</resetValue>
                    <fields>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Data Timeout Trigger Comparison Value When the RXFIFO receives a new piece of data, the timer is cleared and timing restarts (the timing clock is the duration of a piece of data). A receive timeout flag is generated if a valid start bit has not been received by the time the timer has timed out past this configured value.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>UART1</name>
            <description>UART1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x4006B800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>UART1</name>
                <value>14</value>
            </interrupt>
            <registers>
                <register>
                    <name>UART1_CTRL</name>
                    <description>UART control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TX_DLY</name>
                            <description>Transmit delay time setting (used to set the transmission delay time between the last stop bit and the next start bit)
                                000: No delay
                                001: 1bit delay 010:
                                2bit delay
                                ......
                                111: 7bit delay</description>
                            <bitRange>[16:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDBIT</name>
                            <description>Automatic baud rate detection bit length configuration
                                11: 8-bit duration from the start bit to the first rising edge. Input data is 0x80.
                                10: 4-bit duration from the start bit to the first rising edge. The input data is 0x08.
                                01: 2-bit duration from the start bit to the first rising edge. Input data is 0x02.
                                00: 1-bit duration from the start bit to the first rising edge. The input data is 0x01.</description>
                            <bitRange>[13:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDEN</name>
                            <description>Auto baud rate detection enable
                                1: Automatic baud rate detection function enabled
                                0: Automatic baud rate detection function disabled This bit will be automatically cleared after the auto-detect is finished.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARMD</name>
                            <description>Parity mode selection
                                11: Standing 0
                                10: Standing 1
                                01: Even Check
                                00: odd calibration</description>
                            <bitRange>[8:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PAREN</name>
                            <description>Parity bit enable
                                1: with parity bit
                                0: without parity bit</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>NINEBIT</name>
                            <description>9bit data mode enable
                                1: 9bit data mode
                                0: 8bit data mode</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDMAEN</name>
                            <description>Send DMA Transmit Enable
                                1: Indicates the transmit data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the transmit data register of the UART.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXDMAEN</name>
                            <description>Receive DMA Transmit Enable
                                1: Indicates the receive data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the receive data register of the UART.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXEN</name>
                            <description>transmit enable bit
                                1: Send open. Sends the data stored in tx_fifo through uart_tx.
                                0: Transmit off. No data is sent. uart_tx signal is held at 1.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXEN</name>
                            <description>receive enable bit (computing)
                                1: Receive open. External data can be received via uart_rx
                                0: Receive off. Do not receive data from uart_rx</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UARTEN</name>
                            <description>UART Enable Bit
                                1: Enable UART Module
                                0: Disable UART module</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_BAUD</name>
                    <description>UART Baud Rate Configuration Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BAUD</name>
                            <description>Baud rate configuration data</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_TDR</name>
                    <description>UART write data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TDR</name>
                            <description>Write Data Register The data to be sent is written to the transmit FIFO through this register. When the data is ready to be sent, the shift register reads the transmit FIFO directly to send the data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_RDR</name>
                    <description>UART read data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RDR</name>
                            <description>The received data is read out through this register. The shift register stores data into the receive FIFO after each transmission is completed, and the data in the receive FIFO is read out through this register.
                                Note: If a parity bit error or a stop bit error occurs, the set of data will not be written to the RXFIFO.if the RXFIFO is not empty, the data in the RXFIFO is valid data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_IE</name>
                    <description>UART interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Auto baud rate detection function Counter overflow interrupt enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO overflow interrupt enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>Send the data stored in FIFO to reach the set water level Interrupt Enable</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>Receive data received in FIFO reaches the set water level Interrupt enable</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive timeout interrupt enable</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error interrupt enable for receive data</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARITYE</name>
                            <description>Receive data with parity error interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data sent interrupt enable (indicates that the data in the send shift register has been sent and there is no more data to be sent in the send data FIFO)</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_IF</name>
                    <description>UART Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x2400</resetValue>
                    <fields>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Send FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[22:20]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Receive FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[19:17]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXBUSY</name>
                            <description>Data transmission busy flag
                                1: Transmit FIFO is not empty, or there is data being sent.
                                0: Transmit FIFO is empty and there is no data being sent.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half full flag</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_FULL</name>
                            <description>Send FIFO full flag</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Send FIFO Empty Flag</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full flag</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full flag</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_EMPTY</name>
                            <description>Receive FIFO empty flag</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Automatic baud rate detection function Counter overflow flag
                                1: Counter overflow, detection failure
                                0: Counter not overflowed write 1 Clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO Overflow Flag Write 1 Clear
                                Note: Data after overflow will be discarded</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>When the data stored in the transmit FIFO reaches the set water level, the bit is
                                1, otherwise 0</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>When the data received in the receive FIFO reaches the set water level, the bit
                                1, otherwise 0</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Timeout Flag 1: Send Receive Timeout Write
                                1 Clear</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error in receive data Write 1 Clear The main point is that the stop bit is not received or recognized within the expected time period, then it is considered a stop bit error</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>PARRITYE</name>
                            <description>Parity error in received data 1 clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data transmission is complete (indicates that data transmission in the transmit shift register is complete and there is no pending data in the transmit data FIFO) Write 1 to clear the data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_FIFO</name>
                    <description>UART FIFO control register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x07</resetValue>
                    <fields>
                        <field>
                            <name>TF_CLR</name>
                            <description>TXFIFO clear enable Software Write 1 Clear Transmit FIFO, Hardware Auto Clear</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RF_CLR</name>
                            <description>RXFIFO clear enable Software Write 1 Clear Receive FIFO, Hardware Auto Clear</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Water level setting for TXFIFO generating interrupts
                                000: 0
                                001: 1
                                010:2
                                ......
                                111:7 Indicates that the number of data to be sent in the sending FIFO is not more than the water level setting. For example, if the value 011 is set, the corresponding signal is generated when the number of written data in TXFIFO is less than or equal to 3.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Water level setting for RXFIFO generating interrupts
                                000: 1
                                001: 2
                                010: 3
                                ......
                                111: 8 Indicates that the number of received data in the receive FIFO has reached at least the water level setting. For example, if the value 011 is set, the corresponding signal is generated when there are at least 4 data in the RXFIFO.</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_FC</name>
                    <description>UART Flow Control Configuration Register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RTS_SIGNAL</name>
                            <description>Indicates RTS status on the line
                                1: RTS is high
                                0: RTS is low</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CTS_SIGNAL</name>
                            <description>Indicates online CTS status
                                1: CTS is high
                                0: CTS is low</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RTSPOL</name>
                            <description>RTS Signal Polarity Configuration
                                1: When RTS signal is high, UART can receive data; when RTS signal is low, UART receive FIFO is full and can not receive data.
                                0: When RTS signal output is low, UART can receive data; when RTS signal output is high, UART receive FIFO is full and no more data can be received.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSPOL</name>
                            <description>CTS Signal Polarity Configuration
                                1: When the CTS signal input is high, the UART can send data; when the CTS signal input is low, the UART does not send data.
                                0: When CTS signal input is low, UART can send data; when CTS signal input is high, UART does not send data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTSEN</name>
                            <description>RTS flow control enable
                                1: RTS signaling plays a flow control role
                                0: RTS signal does not work</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSEN</name>
                            <description>CTS flow control enable
                                1: CTS signaling plays a flow control role
                                0: CTS signal does not work</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART1_RXTO</name>
                    <description>UART Receive Timeout Configuration Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFF</resetValue>
                    <fields>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Data Timeout Trigger Comparison Value When the RXFIFO receives a new piece of data, the timer is cleared and timing restarts (the timing clock is the duration of a piece of data). A receive timeout flag is generated if a valid start bit has not been received by the time the timer has timed out past this configured value.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>UART2</name>
            <description>UART2 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x4006C000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>UART2</name>
                <value>15</value>
            </interrupt>
            <registers>
                <register>
                    <name>UART2_CTRL</name>
                    <description>UART control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TX_DLY</name>
                            <description>Transmit delay time setting (used to set the transmission delay time between the last stop bit and the next start bit)
                                000: No delay
                                001: 1bit delay 010:
                                2bit delay
                                ......
                                111: 7bit delay</description>
                            <bitRange>[16:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDBIT</name>
                            <description>Automatic baud rate detection bit length configuration
                                11: 8-bit duration from the start bit to the first rising edge. Input data is 0x80.
                                10: 4-bit duration from the start bit to the first rising edge. The input data is 0x08.
                                01: 2-bit duration from the start bit to the first rising edge. Input data is 0x02.
                                00: 1-bit duration from the start bit to the first rising edge. The input data is 0x01.</description>
                            <bitRange>[13:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ABRDEN</name>
                            <description>Auto baud rate detection enable
                                1: Automatic baud rate detection function enabled
                                0: Automatic baud rate detection function disabled This bit will be automatically cleared after the auto-detect is finished.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARMD</name>
                            <description>Parity mode selection
                                11: Standing 0
                                10: Standing 1
                                01: Even Check
                                00: odd calibration</description>
                            <bitRange>[8:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PAREN</name>
                            <description>Parity bit enable
                                1: with parity bit
                                0: without parity bit</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>NINEBIT</name>
                            <description>9bit data mode enable
                                1: 9bit data mode
                                0: 8bit data mode</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDMAEN</name>
                            <description>Send DMA Transmit Enable
                                1: Indicates the transmit data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the transmit data register of the UART.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXDMAEN</name>
                            <description>Receive DMA Transmit Enable
                                1: Indicates the receive data register for DMA operation of the UART.
                                0: Indicates that the CPU operates the receive data register of the UART.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXEN</name>
                            <description>transmit enable bit
                                1: Send open. Sends the data stored in tx_fifo through uart_tx.
                                0: Transmit off. No data is sent. uart_tx signal is held at 1.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXEN</name>
                            <description>receive enable bit (computing)
                                1: Receive open. External data can be received via uart_rx
                                0: Receive off. Do not receive data from uart_rx</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UARTEN</name>
                            <description>UART Enable Bit
                                1: Enable UART Module
                                0: Disable UART module</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_BAUD</name>
                    <description>UART Baud Rate Configuration Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BAUD</name>
                            <description>Baud rate configuration data</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_TDR</name>
                    <description>UART write data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TDR</name>
                            <description>Write Data Register The data to be sent is written to the transmit FIFO through this register. When the data is ready to be sent, the shift register reads the transmit FIFO directly to send the data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_RDR</name>
                    <description>UART read data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RDR</name>
                            <description>The received data is read out through this register. The shift register stores data into the receive FIFO after each transmission is completed, and the data in the receive FIFO is read out through this register.
                                Note: If a parity bit error or a stop bit error occurs, the set of data will not be written to the RXFIFO.if the RXFIFO is not empty, the data in the RXFIFO is valid data.</description>
                            <bitRange>[8:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_IE</name>
                    <description>UART interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Auto baud rate detection function Counter overflow interrupt enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO overflow interrupt enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>Send the data stored in FIFO to reach the set water level Interrupt Enable</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>Receive data received in FIFO reaches the set water level Interrupt enable</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive timeout interrupt enable</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error interrupt enable for receive data</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PARITYE</name>
                            <description>Receive data with parity error interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data sent interrupt enable (indicates that the data in the send shift register has been sent and there is no more data to be sent in the send data FIFO)</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_IF</name>
                    <description>UART Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x2400</resetValue>
                    <fields>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Send FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[22:20]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Receive FIFO water level flag signal
                                000: If the FIFO is not full, it means there is 0 data in the FIFO, and if it is full, it means The FIFO has 8 data;
                                001: Indicates that the FIFO has 1 data;
                                ......
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[19:17]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXBUSY</name>
                            <description>Data transmission busy flag
                                1: Transmit FIFO is not empty, or there is data being sent.
                                0: Transmit FIFO is empty and there is no data being sent.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half full flag</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_FULL</name>
                            <description>Send FIFO full flag</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Send FIFO Empty Flag</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full flag</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full flag</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO_EMPTY</name>
                            <description>Receive FIFO empty flag</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ABRD_OVF</name>
                            <description>Automatic baud rate detection function Counter overflow flag
                                1: Counter overflow, detection failure
                                0: Counter not overflowed write 1 Clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO Overflow Flag Write 1 Clear
                                Note: Data after overflow will be discarded</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXFIFO</name>
                            <description>When the data stored in the transmit FIFO reaches the set water level, the bit is
                                1, otherwise 0</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXFIFO</name>
                            <description>When the data received in the receive FIFO reaches the set water level, the bit
                                1, otherwise 0</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Timeout Flag 1: Send Receive Timeout Write
                                1 Clear</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STOPE</name>
                            <description>Stop bit error in receive data Write 1 Clear The main point is that the stop bit is not received or recognized within the expected time period, then it is considered a stop bit error</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>PARRITYE</name>
                            <description>Parity error in received data 1 clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXDONE</name>
                            <description>All data transmission is complete (indicates that data transmission in the transmit shift register is complete and there is no pending data in the transmit data FIFO) Write 1 to clear the data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_FIFO</name>
                    <description>UART FIFO control register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x07</resetValue>
                    <fields>
                        <field>
                            <name>TF_CLR</name>
                            <description>TXFIFO clear enable Software Write 1 Clear Transmit FIFO, Hardware Auto Clear</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RF_CLR</name>
                            <description>RXFIFO clear enable Software Write 1 Clear Receive FIFO, Hardware Auto Clear</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Water level setting for TXFIFO generating interrupts
                                000: 0
                                001: 1
                                010:2
                                ......
                                111:7 Indicates that the number of data to be sent in the sending FIFO is not more than the water level setting. For example, if the value 011 is set, the corresponding signal is generated when the number of written data in TXFIFO is less than or equal to 3.</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Water level setting for RXFIFO generating interrupts
                                000: 1
                                001: 2
                                010: 3
                                ......
                                111: 8 Indicates that the number of received data in the receive FIFO has reached at least the water level setting. For example, if the value 011 is set, the corresponding signal is generated when there are at least 4 data in the RXFIFO.</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_FC</name>
                    <description>UART Flow Control Configuration Register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RTS_SIGNAL</name>
                            <description>Indicates RTS status on the line
                                1: RTS is high
                                0: RTS is low</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CTS_SIGNAL</name>
                            <description>Indicates online CTS status
                                1: CTS is high
                                0: CTS is low</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RTSPOL</name>
                            <description>RTS Signal Polarity Configuration
                                1: When RTS signal is high, UART can receive data; when RTS signal is low, UART receive FIFO is full and can not receive data.
                                0: When RTS signal output is low, UART can receive data; when RTS signal output is high, UART receive FIFO is full and no more data can be received.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSPOL</name>
                            <description>CTS Signal Polarity Configuration
                                1: When the CTS signal input is high, the UART can send data; when the CTS signal input is low, the UART does not send data.
                                0: When CTS signal input is low, UART can send data; when CTS signal input is high, UART does not send data.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RTSEN</name>
                            <description>RTS flow control enable
                                1: RTS signaling plays a flow control role
                                0: RTS signal does not work</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CTSEN</name>
                            <description>CTS flow control enable
                                1: CTS signaling plays a flow control role
                                0: CTS signal does not work</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UART2_RXTO</name>
                    <description>UART Receive Timeout Configuration Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFF</resetValue>
                    <fields>
                        <field>
                            <name>RXTO</name>
                            <description>Receive Data Timeout Trigger Comparison Value When the RXFIFO receives a new piece of data, the timer is cleared and timing restarts (the timing clock is the duration of a piece of data). A receive timeout flag is generated if a valid start bit has not been received by the time the timer has timed out past this configured value.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>FLASH_CTRL</name>
            <description>FLASH_CTRL unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x4006F000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>FLASH_CFG</name>
                    <description>Flash configuration register</description>
                    <addressOffset>0x0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x80000000</resetValue>
                    <fields>
                        <field>
                            <name>DEEP_PD</name>
                            <description>Configure FLASH to enter low-power mode
                                Note: This operation can only be performed in RAM. Values:
                                1: Enter low power mode
                                0: Normal operating mode</description>
                            <bitRange>[31:31]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MODE</name>
                            <description>Operating Mode Configuration Register
                                Note 1: All the above operations can only be performed in RAM.
                                Note 2: MODE must be configured back to 0 every time other operation modes (other than normal read operation mode) are completed. Values:
                                000: Normal read operation. Used for AHB read operation mode.
                                001: Programming operation. Program the data to be programmed into the address starting from the address in FLASH_ADDR. The maximum number of sectors to be programmed is half a sector (256 bytes) at a time, and only half a sector can be programmed.
                                010: Sector erase operation (512 bytes per sector). The address of the corresponding erased sector is specified by FLASH_ADDR.</description>
                            <bitRange>[4:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>NVR_SEL</name>
                            <description>NVR Zone Selection
                                Note: This register change must be performed in RAM. Values:
                                0: Main Array selected (128 sectors, 512 bytes per sector)
                                1: Selects the NVR sector (4 sectors, 512 bytes each)</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>READ_MD</name>
                            <description>Read Rate Mode Selection
                                Note: This register change must be performed in RAM. Values:
                                1: 2 system clock cycles wait (56MHz&lt;sys_clk&lt;84MHz)
                                0: 1 system clock cycle wait (sys_clk&lt;=56MHz)</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_ADDR</name>
                    <description>Flash Address Configuration Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                    <fields>
                        <field>
                            <name>ADDR</name>
                            <description>Address register for program/sector erase operations The starting address, in words, at which the programming operation is initiated. The maximum programming data for each consecutive programming is half a sector, i.e., the maximum programming data is 64 words, and programming can only be performed in half a sector; When the sector erase operation is started, bit7-bit13 indicates the sector number to be erased; that is, 1 sector 512Byte.</description>
                            <bitRange>[13:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_WDATA</name>
                    <description>Flash write data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                </register>
                <register>
                    <name>FLASH_RDATA</name>
                    <description>Flash read data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                </register>
                <register>
                    <name>FLASH_START</name>
                    <description>Flash Operation Start Register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                    <fields>
                        <field>
                            <name>START</name>
                            <description>Operational startup control bits Writing this bit to 1 initiates the command operation configured in the MODE register. This bit is automatically cleared when the current command operation is completed</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_ST</name>
                    <description>Flash status register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x5</resetValue>
                    <fields>
                        <field>
                            <name>PROG_BUF_EMPTY</name>
                            <description>Programming Data Cache Register Empty Status Flag
                                1: Indicates that the Programming Data Cache Register is empty. The next word of data can be written.
                                0: Indicates that the Programming Data Cache Register is non-empty and the next word of data cannot be written. Writing the next word data during the current word programming is programmed consecutively, otherwise Terminates continuous programming operation.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>BUSY</name>
                            <description>Controller Busy Flag
                                1: Indicates that the controller is in the process of the current command operation.
                                0: Indicates that the controller is in the READY state, waiting for the command operation to be executed.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>INIT_BUSY</name>
                            <description>FLASH Initialization Busy Flag
                                1: Indicates that flash initialization is in progress.
                                0: Indicates initialization is complete.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_LOCK</name>
                    <description>Flash Operation Lock Control Register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                    <fields>
                        <field>
                            <name>LOCK</name>
                            <description>Operator lock control Writing 0x55 to this register locks the operation start and START cannot be written 1. Used to protect against misoperation of FLASH. Power-up is locked by default.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_UNLOCK</name>
                    <description>Flash Operation Unlock Control Register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x0</resetValue>
                    <fields>
                        <field>
                            <name>UNLOCK</name>
                            <description>Operation Unlock Controls Writing 0xAA to this register unlocks operation start and START can be written 1.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>write-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_MASK</name>
                    <description>Flash mask control register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x2</resetValue>
                    <fields>
                        <field>
                            <name>MASK_LOCK</name>
                            <description>MASK Select Lock Control When this bit is configured as 1, MASK_SEL cannot be changed. When this bit is set to 0, MASK_SEL can be modified.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MASK_SEL</name>
                            <description>MASK Selection
                                00: Unshielded
                                01: Minimum 2KB (i.e., minimum 4 sectors) blocked
                                10: Minimum 4KB (i.e., minimum 8 sectors) blocked
                                11: Minimum 8KB (i.e., minimum 16 sectors) blocked</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_ERASETIME</name>
                    <description>Flash Erase Time Parameter Configuration Register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x7532a31b</resetValue>
                    <fields>
                        <field>
                            <name>TRCV</name>
                            <description>FLASH Sector Erase Time, TRCV Time Register Depending on the frequency of the system clock, the TRCV needs to be configured appropriately so that its timing is at least greater than the 50us requirement. Sector erase operation can be operated with a system clock of up to 72MHz.
                                Note 1: The default value is the configured value for the sector erase operation when the system clock is 48MHz.</description>
                            <bitRange>[30:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TERASE</name>
                            <description>FLASH Sector Erase Time, TERASE Time Register Depending on the frequency of the system clock, the TERASE needs to be configured appropriately so that the TERASE time is in the range of 3.2ms-4ms. The sector erase operation works with a system clock of up to 72MHz;
                                Note 1: The default value is the configured value for the sector erase operation when the system clock is 48MHz.</description>
                            <bitRange>[18:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>FLASH_PROGTIME</name>
                    <description>Flash Program Time Parameter Configuration Register</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1f4360</resetValue>
                    <fields>
                        <field>
                            <name>TPGS</name>
                            <description>TPGS Time Control Register for FLASH programming operations. Depending on the frequency of the system clock, the TPGS needs to be configured appropriately so that its timing is at least greater than the 20us requirement.
                                Note: Default value is for system clock at 48MHz.</description>
                            <bitRange>[21:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TPROG</name>
                            <description>TPROG time control register for FLASH programming operation. The TPROG time needs to be in the range of 16us-20us when programming; Depending on the frequency of the system clock, the TPROG needs to be configured appropriately so that it is within the proper range.
                                Note: Default value is for system clock at 48MHz.</description>
                            <bitRange>[10:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PORTCON</name>
            <description>PORTCON unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B0000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>PORTA_SEL0</name>
                    <description>PORTA Function Select Register0</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA7</name>
                            <description>Port configuration
                                0000: GPIOA7
                                0001: UART1_TX
                                0010: timerp0_in0
                                0011: timerp0_out_l
                                0100: SARADC_CH2
                                0101: OPA0_VP</description>
                            <bitRange>[31:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA6</name>
                            <description>Port configuration
                                0000: GPIOA6
                                0001: UART1_RTS
                                0010: TIMERP1_IN1
                                0011: timerp1_out_h
                                0100: SARADC_CH1
                                0101: OPA0_OUT</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA5</name>
                            <description>Port configuration
                                0000: GPIOA5
                                0001: UART1_CTS
                                0010: PWMP1_PLUS1
                                0011: TIMERP1_IN0
                                0100: timerp1_out_l
                                0101: WAKEUP1
                                0110: SARADC_CH0</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA4</name>
                            <description>Port configuration
                                000: GPIOA4
                                001: CMP0_VP
                                010: XTAH_XO</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA3</name>
                            <description>Port configuration
                                000: GPIOA3
                                001: CMP0_VN</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA2</name>
                            <description>Port configuration
                                000: GPIOA2
                                001: XTAL_XO</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA1</name>
                            <description>Port configuration
                                000: GPIOA1
                                001: XTAL_XI</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA0</name>
                            <description>0000: GPIOA0
                                0001: PWMP1_PLUS0
                                0010: PWMP0_PLUS1
                                0011: TM
                                0100: WAKEUP0</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_SEL1</name>
                    <description>PORTA Function Select Register1</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA15</name>
                            <description>0000: GPIOA15
                                0001: PWMB1_CH1
                                0010: PWMP0_CH0
                                0011: TIMERP1_IN1
                                0100: timerp1_out_h</description>
                            <bitRange>[31:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA14</name>
                            <description>0000: GPIOA14
                                0001: PWMB1_CH0
                                0010: PWMP0_CH2N
                                0011: TIMERP1_IN0
                                0100: timerp1_out_l
                                0101: SARADC_CH9</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA13</name>
                            <description>0000: GPIOA13
                                0001: PWMB0_CH2
                                0010: PWMP0_CH1N
                                0011: timerp0_in1
                                0100: timerp0_out_h
                                0101: SARADC_CH8</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA12</name>
                            <description>0000: GPIOA12
                                0001: SPI0_MOSI
                                0010: PWMB0_CH1
                                0011: PWMP0_CH0N
                                0100: TIMERP0_IN0
                                0101: timerp0_out_l
                                0110: SARADC_CH7</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA11</name>
                            <description>0000: GPIOA11
                                0001: SPI0_MISO
                                0010: PWMB0_CH0
                                0011: PWMP0_BRAKE0
                                0100: TIMERP1_IN1
                                0101: timerp1_out_h
                                0110: SARADC_CH6</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA10</name>
                            <description>0000: GPIOA10
                                0001: SPI0_CLK
                                0010: SARADC_CH5
                                0011: CMP1_VP</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA9</name>
                            <description>0000: GPIOA9
                                0001: SPI0_SSN
                                0010: TIMERP1_IN0
                                0011: timerp1_out_l
                                0100: TM
                                0101: SARADC_CH4
                                0110: CMP1_VN</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA8</name>
                            <description>0000: GPIOA8
                                0001: UART1_RX
                                0010: timerp0_in1
                                0011: timerp0_out_h
                                0100: SARADC_CH3
                                0101: OPA0_VN</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_SEL0</name>
                    <description>PORTB Function Select Register0</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xffff0000</resetValue>
                    <fields>
                        <field>
                            <name>PORTB7</name>
                            <description>0000: GPIOB7
                                0001: SPI0_SSN
                                0010: UART0_TX
                                0011: IIC0_SCL
                                0100: PWMP1_BRAKE0
                                0101: PWMP0_CH1</description>
                            <bitRange>[31:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB6</name>
                            <description>0000: GPIOB6
                                0001: PWMP0_CH0
                                0010: timerp0_in1
                                0011: timerp0_out_h</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB5</name>
                            <description>0000: GPIOB5
                                0001: SPI1_MOSI
                                0010: PWMP1_CH0N
                                0011: PWMP0_CH2N
                                0100: TIMERP0_IN0
                                0101: timerp0_out_l</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB4</name>
                            <description>0000: GPIOB4
                                0001: SPI1_MISO
                                0010: IIC1_SCL
                                0011: PWMP1_CH0
                                0100: PWMP0_CH1N
                                0101: timerp1_hall2</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB3</name>
                            <description>0000: GPIOB3
                                0001: SPI1_CLK
                                0010: IIC1_SDA
                                0011: PWMP0_CH0N
                                0100: TIMERP1_HALL1</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB2</name>
                            <description>0000: GPIOB2
                                0001: SPI1_SSN
                                0010: PWMP0_BRAKE1
                                0011: TIMERP1_HALL0</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB1</name>
                            <description>0000: GPIOB1
                                0001: UART2_RX
                                0010: IIC0_SDA
                                0011: PWMP0_CH2</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB0</name>
                            <description>0000: GPIOB0
                                0001: UART2_TX
                                0010: IIC0_SCL
                                0011: PWMB1_CH2
                                0100: PWMP0_CH1</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_SEL1</name>
                    <description>PORTB Function Select Register1</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x01001000</resetValue>
                    <fields>
                        <field>
                            <name>PORTB8</name>
                            <description>FUNCTION</description>
                            <bitOffset>0</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB9</name>
                            <description>FUNCTION</description>
                            <bitOffset>4</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB10</name>
                            <description>FUNCTION</description>
                            <bitOffset>8</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB11</name>
                            <description>0001:SWDIO</description>
                            <bitOffset>12</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB12</name>
                            <description>FUNCTION</description>
                            <bitOffset>16</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB13</name>
                            <description>FUNCTION</description>
                            <bitOffset>20</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB14</name>
                            <description>0001:SWCLK</description>
                            <bitOffset>24</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB15</name>
                            <description>FUNCTION</description>
                            <bitOffset>28</bitOffset>
                            <bitWidth>4</bitWidth>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_SEL0</name>
                    <description>PORTC Function Select Register0</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTC7</name>
                            <description>0000: GPIOC7
                                0001: IIC1_SDA
                                0010: PWMP1_CH2
                                0011: TIMERP1_IN0
                                0100: timerp1_out_l
                                0101: OPA1_OUT</description>
                            <bitRange>[31:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC6</name>
                            <description>0000: GPIOC6
                                0001: IIC1_SCL
                                0010: PWMP1_CH1
                                0011: TIMERP1_IN1
                                0100: timerp1_out_h
                                0101: OPA1_VN</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC5</name>
                            <description>0000: GPIOC5
                                0001: timerp0_hall2
                                0010: TM
                                0011: OPA1_VP</description>
                            <bitRange>[23:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC4</name>
                            <description>0000: GPIOC4
                                0001: UART0_RX
                                0010: IIC0_SDA
                                0011: PWMP1_CH2N
                                0100: TIMERP0_HALL1
                                0101: CMP2_VP</description>
                            <bitRange>[19:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC3</name>
                            <description>0000: GPIOC3
                                0001: UART0_TX
                                0010: IIC0_SCL
                                0011: PWMP1_CH1N
                                0100: TIMERP0_HALL0
                                0101: CMP2_VN</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC2</name>
                            <description>0000: GPIOC2
                                0001: SPI1_MOSI
                                0010: PWMB1_CH2
                                0011: PWMP1_BRAKE2
                                0100: TIMERP0_IN1
                                0101: timerp0_out_h</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC1</name>
                            <description>0000: GPIOC1
                                0001: SPI1_MISO
                                0010: UART2_RTS
                                0011: PWMB1_CH1
                                0100: TIMERP0_IN0
                                0101: timerp0_out_l</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC0</name>
                            <description>0000: GPIOC0
                                0001: SPI1_CLK
                                0010: UART2_CTS
                                0011: PWMB1_CH0</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_IE</name>
                    <description>PORTA Input enable register</description>
                    <addressOffset>0x100</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_IE</name>
                            <description>PORTA Input Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to A0, bit1 corresponds to A1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_IE</name>
                    <description>PORTB Input enable register</description>
                    <addressOffset>0x104</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x4800</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_IE</name>
                            <description>PORTB Input Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to B0, bit1 corresponds to B1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_IE</name>
                    <description>PORTC Input enable register</description>
                    <addressOffset>0x108</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x20</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_IE</name>
                            <description>PORTC Input Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to C0, bit1 corresponds to C1)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_PU</name>
                    <description>PORTA pull-up enable register</description>
                    <addressOffset>0x200</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_PU</name>
                            <description>PORTA Pull-up Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to A0, bit1 corresponds to A1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_PU</name>
                    <description>PORTB pull-up enable register</description>
                    <addressOffset>0x204</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_PU</name>
                            <description>PORTB Pull-up Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to B0, bit1 corresponds to B1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_PU</name>
                    <description>PORTC pull-up enable register</description>
                    <addressOffset>0x208</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_PU</name>
                            <description>PORTC Pull-up Enable Register
                                0: disable
                                1: Enable (each bit corresponds to 1 IO, bit0 corresponds to C0, bit1 corresponds to C1)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_PD</name>
                    <description>PORTA pull-down enable register</description>
                    <addressOffset>0x300</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_PD</name>
                            <description>PORTA Pull-down Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to A0, bit1 corresponds to A1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_PD</name>
                    <description>PORTB pull-down enable register</description>
                    <addressOffset>0x304</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_PD</name>
                            <description>PORTB Pull-down Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to B0, bit1 corresponds to B1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_PD</name>
                    <description>PORTC pull-down enable register</description>
                    <addressOffset>0x308</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x20</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_PD</name>
                            <description>PORTC Pull-down Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to C0, bit1 corresponds to C1)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_OD</name>
                    <description>PORTA Open Drain Enable Register</description>
                    <addressOffset>0x400</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_OD</name>
                            <description>PORTA Open Drain Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to A0, bit1 corresponds to A1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_OD</name>
                    <description>PORTB Open Drain Enable Register</description>
                    <addressOffset>0x404</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_OD</name>
                            <description>PORTB Open Drain Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to B0, bit1 corresponds to B1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_OD</name>
                    <description>PORTC Open Drain Enable Register</description>
                    <addressOffset>0x408</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_OD</name>
                            <description>PORTC Open Drain Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to C0, bit1 corresponds to C1)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_WKE</name>
                    <description>PORTA wakeup enable register</description>
                    <addressOffset>0x500</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_WKE</name>
                            <description>PORTA Wake-up Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to A0, bit1 corresponds to A1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_WKE</name>
                    <description>PORTB wakeup enable register</description>
                    <addressOffset>0x504</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_WKE</name>
                            <description>PORTB Wake-up Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to B0, bit1 corresponds to B1)</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_WKE</name>
                    <description>PORTC wakeup enable register</description>
                    <addressOffset>0x508</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_WKE</name>
                            <description>PORTC Wake-up Enable Register
                                0: disable 1: Enable (each bit corresponds to 1 IO, bit0 corresponds to C0, bit1 corresponds to C1)</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORT_CFG</name>
                    <description>port configuration register</description>
                    <addressOffset>0x600</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x15</resetValue>
                    <fields>
                        <field>
                            <name>PORT_HYS</name>
                            <description>PORT Input hysteresis level selection
                                0: low input hysteresis (input signal greater than 0.7VDD and less than 0.3VDD)
                                1: high input hysteresis (input signal greater than 0.85VDD and less than 0.15VDD)</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTC_DS</name>
                            <description>PORTC Driveability Selection Register
                                00: 5mA
                                01: 10mA
                                10: 15mA
                                11: 20mA</description>
                            <bitRange>[5:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTB_DS</name>
                            <description>PORTB Drive capability selection register
                                00: 5mA
                                01: 10mA
                                10: 15mA
                                11: 20mA</description>
                            <bitRange>[3:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>PORTA_DS</name>
                            <description>PORTA Driveability Selection Register
                                00: 5mA
                                01: 10mA
                                10: 15mA
                                11: 20mA</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTA_WK_SEL</name>
                    <description>PORTA Wake-up IO Along Select Register</description>
                    <addressOffset>0x700</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTA_WK_SEL</name>
                            <description>PORTA wake-up function is configured along
                                0: PORTA wake-up function active on falling edge
                                1: PORTA wake-up function rising edge active</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTB_WK_SEL</name>
                    <description>PORTB Wake-up IO Along Select Register</description>
                    <addressOffset>0x704</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTB_WK_SEL</name>
                            <description>PORTB wake-up function is configured along
                                0: PORTB wake-up function active on falling edge
                                1: PORTB wake-up function rising edge active</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PORTC_WK_SEL</name>
                    <description>PORTC Wake-Up IO Along Select Register</description>
                    <addressOffset>0x708</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PORTC_WK_SEL</name>
                            <description>PORTC wake-up function is configured along
                                0: PORTC wake-up function active on falling edge
                                1: PORTC wake-up function rising edge active</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PWM_BASE0</name>
            <description>PWM_BASE0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B1000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>PWM_BASE0</name>
                <value>9</value>
            </interrupt>
            <registers>
                <register>
                    <name>PWMBASE0_EN</name>
                    <description>PWMBASE enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>COUNTER_EN</name>
                            <description>PWMBASE Counter Enable Register When this bit is set to 1, it means that the counter starts counting, and CH0/CH1/CH2 will generate the PWM output waveform of the corresponding channel according to the pre-configured period value and comparison value. When this bit is configured to 0, it means the counter stops counting, and the output waveform level returns to the initial 0 level state after one full counting cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_DIV</name>
                    <description>PWMBASE Clock Prescaler Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PWMBASE_DIV</name>
                            <description>PWMBASE Count Clock Prescaler Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                0x0002: Indicates 3 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_CON</name>
                    <description>PWMBASE Output Configuration Register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_OE</name>
                            <description>CH2 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH2 square wave</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OE</name>
                            <description>CH1 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH1 square wave</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OE</name>
                            <description>CH0 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0 square wave</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OUT_INV</name>
                            <description>CH2 Output polarity flip-flop or not register
                                0: No change, CH2 output waveform is the original waveform
                                1: Polarity flip, CH2 output waveform is original waveform flip</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OUT_INV</name>
                            <description>CH1 Output polarity flip-flop or not register
                                0: No change, CH1 output waveform is the original waveform
                                1: Polarity flip, CH1 output waveform is original waveform flip</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OUT_INV</name>
                            <description>CH0 Output polarity flip-flop or not register
                                0: no change, CH0 output waveform is the original waveform
                                1: Polarity flip, CH0 output waveform is original waveform flip</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_PERIOD</name>
                    <description>PWMBASE Period configuration register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PWMx_PERIOD</name>
                            <description>PWMx Output Period Configuration Register The actual counting period is the value of the period configured for this register plus 1. Note 0: The period cannot be configured as 0. For example, if the configuration is decimal 199, the PWM waveform period is considered to be 200.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_IE</name>
                    <description>PWMBASE interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>POF_IE</name>
                            <description>Cycle overflow interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_COMP_IE</name>
                            <description>CH2 Reach flip point interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_COMP_IE</name>
                            <description>CH1 Reach flip point interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_COMP_IE</name>
                            <description>CH0 Reach flip point interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_IF</name>
                    <description>PWMBASE Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>POF_IF</name>
                            <description>Cycle Overflow Interrupt Status Write 1 Clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH2_COMP_IF</name>
                            <description>CH2 Reach Flip Point Status Write 1 Clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH1_COMP_IF</name>
                            <description>CH1 Reach flip point status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH0_COMP_IF</name>
                            <description>CH0 Reach flip point status write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_CNT</name>
                    <description>PWMBASE Current count value register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>PWMBASE_CNT</name>
                            <description>PWMBASE Counter Current Count Value Register</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_CH0_COMP</name>
                    <description>PWMBASE Channel 0 Flip Point Configuration Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_COMP</name>
                            <description>CH0 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_CH1_COMP</name>
                    <description>PWMBASE Channel 1 Flip Point Configuration Register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_COMP</name>
                            <description>CH1 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE0_CH2_COMP</name>
                    <description>PWMBASE Channel 2 Flip Point Configuration Register</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_COMP</name>
                            <description>CH2 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PWM_BASE1</name>
            <description>PWM_BASE1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B1800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>PWM_BASE1</name>
                <value>10</value>
            </interrupt>
            <registers>
                <register>
                    <name>PWMBASE1_EN</name>
                    <description>PWMBASE enable register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>COUNTER_EN</name>
                            <description>PWMBASE Counter Enable Register When this bit is set to 1, it means that the counter starts counting, and CH0/CH1/CH2 will generate the PWM output waveform of the corresponding channel according to the pre-configured period value and comparison value. When this bit is configured to 0, it means the counter stops counting, and the output waveform level returns to the initial 0 level state after one full counting cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_DIV</name>
                    <description>PWMBASE Clock Prescaler Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PWMBASE_DIV</name>
                            <description>PWMBASE Count Clock Prescaler Register
                                0x0000: indicates 1 division
                                0x0001: indicates 2 divisions
                                0x0002: Indicates 3 divisions
                                ......
                                0xFFFF: indicates 65536 division frequency</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_CON</name>
                    <description>PWMBASE Output Configuration Register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_OE</name>
                            <description>CH2 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH2 square wave</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OE</name>
                            <description>CH1 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH1 square wave</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OE</name>
                            <description>CH0 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0 square wave</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OUT_INV</name>
                            <description>CH2 Output polarity flip-flop or not register
                                0: No change, CH2 output waveform is the original waveform
                                1: Polarity flip, CH2 output waveform is original waveform flip</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OUT_INV</name>
                            <description>CH1 Output polarity flip-flop or not register
                                0: No change, CH1 output waveform is the original waveform
                                1: Polarity flip, CH1 output waveform is original waveform flip</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OUT_INV</name>
                            <description>CH0 Output polarity flip-flop or not register
                                0: no change, CH0 output waveform is the original waveform
                                1: Polarity flip, CH0 output waveform is original waveform flip</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_PERIOD</name>
                    <description>PWMBASE Period configuration register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PWMx_PERIOD</name>
                            <description>PWMx Output Period Configuration Register The actual counting period is the value of the period configured for this register plus 1. Note 0: The period cannot be configured as 0. For example, if the configuration is decimal 199, the PWM waveform period is considered to be 200.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_IE</name>
                    <description>PWMBASE interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>POF_IE</name>
                            <description>Cycle overflow interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_COMP_IE</name>
                            <description>CH2 Reach flip point interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_COMP_IE</name>
                            <description>CH1 Reach flip point interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_COMP_IE</name>
                            <description>CH0 Reach flip point interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_IF</name>
                    <description>PWMBASE Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>POF_IF</name>
                            <description>Cycle Overflow Interrupt Status Write 1 Clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH2_COMP_IF</name>
                            <description>CH2 Reach Flip Point Status Write 1 Clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH1_COMP_IF</name>
                            <description>CH1 Reach flip point status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>CH0_COMP_IF</name>
                            <description>CH0 Reach flip point status write 1 clear</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_CNT</name>
                    <description>PWMBASE Current count value register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>PWMBASE_CNT</name>
                            <description>PWMBASE Counter Current Count Value Register</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_CH0_COMP</name>
                    <description>PWMBASE Channel 0 Flip Point Configuration Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_COMP</name>
                            <description>CH0 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_CH1_COMP</name>
                    <description>PWMBASE Channel 1 Flip Point Configuration Register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_COMP</name>
                            <description>CH1 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMBASE1_CH2_COMP</name>
                    <description>PWMBASE Channel 2 Flip Point Configuration Register</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_COMP</name>
                            <description>CH2 Flip Point Configuration Register
                                Note: If the count value is less than the rollover point value, output 1; if it is greater than or equal to the rollover point value, output 0.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PWM_PLUS0</name>
            <description>PWM_PLUS0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B4000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>PWM_PLUS0</name>
                <value>11</value>
            </interrupt>
            <registers>
                <register>
                    <name>PWMPLUS0_CFG</name>
                    <description>PWMPLUS0_CFG</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTO_RELOAD</name>
                            <description>Auto-Load Register, which indicates how many times after a cycle overflow the cycle value, compare value, deadband value and TRIGGER value are automatically loaded once. The autoload action performs an autoload after (AUTO_RELOAD+1) cycle overflow.</description>
                            <bitRange>[15:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OUT_MODE</name>
                            <description>PWM output mode
                                0: Edge aligned mode output
                                1: Center-aligned mode output</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_REP</name>
                            <description>PWM Counter Cycle Method
                                0: Single, stop after one counting cycle
                                1: Loop, start and count in a loop until the software stops</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_TYPE</name>
                            <description>PWM Counter Behavior
                                0: count up
                                1: Counting down If center-aligned mode, it indicates the counting behavior of the first half cycle of the counter.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>COUNTER_EN</name>
                            <description>Counter Enable Register When this bit is set to 1, it means that the counter starts counting, and CH0/CH1/CH2 generate the PWM output waveforms of the corresponding channels according to the pre-configured period value, comparison value and deadband value. When configured for the one-shot method, this bit is automatically cleared by the hardware after one clock cycle. When configured for cyclic mode, this bit needs to be cleared to zero by the software to stop the counter counting, and the output waveform level returns to the IDLE state after one full counting cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_GEN</name>
                    <description>PWMPLUS0_GEN</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_OE</name>
                            <description>CH2N Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH2N square wave</description>
                            <bitRange>[29:29]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OE</name>
                            <description>CH2 Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH2 square wave</description>
                            <bitRange>[28:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_OE</name>
                            <description>CH1N Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH1N square wave</description>
                            <bitRange>[27:27]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OE</name>
                            <description>CH1 Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH1 square wave</description>
                            <bitRange>[26:26]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_OE</name>
                            <description>CH0N Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0N square wave</description>
                            <bitRange>[25:25]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OE</name>
                            <description>CH0 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0 square wave</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2N_OUTINV</name>
                            <description>CH2N Channel Output Status Selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OUTINV</name>
                            <description>CH2 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_OUTINV</name>
                            <description>CH1N Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OUTINV</name>
                            <description>CH1 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_OUTINV</name>
                            <description>CH0N Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OUTINV</name>
                            <description>CH0 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_START</name>
                            <description>Raw CH2 Output status value at start of channel counting
                                0: Raw CH2 channel output 0 level
                                1: The original CH2 channel outputs a level of 1. When counting starts, CH2N is the inverse of CH2.</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_START</name>
                            <description>Raw CH1 Output status value at start of channel counting
                                0: Raw CH1 channel output 0 level
                                1: The original CH1 channel outputs 1 level. After counting starts, CH1N is the inverse of CH1.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_START</name>
                            <description>Output status value when raw CH0 channel starts counting
                                0: Raw CH0 channel output 0 level
                                1: The original CH0 channel outputs a level of 1. When counting starts, CH0N is the inverse of CH0.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2N_IDLE</name>
                            <description>Raw CH2N output status value when channel is idle
                                0: raw CH2N channel output 0 level
                                1: Raw CH2N channel output 1 level</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_IDLE</name>
                            <description>Raw CH2 Output status value when channel is idle
                                0: Raw CH2 channel output 0 level
                                1: Raw CH2 channel output 1 level</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_IDLE</name>
                            <description>Raw CH1N Output status value when channel is idle
                                0: raw CH1N channel output 0 level
                                1: Raw CH1N channel output 1 level</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_IDLE</name>
                            <description>Raw CH1 Output status value when channel is idle
                                0: Raw CH1 channel output 0 level
                                1: Raw CH1 channel output 1 level</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_IDLE</name>
                            <description>Raw CH0N Output status value when channel is idle
                                0: raw CH0N channel output 0 level
                                1: Raw CH0N channel output 1 level</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_IDLE</name>
                            <description>Raw CH0 Output status value when channel is idle
                                0: Raw CH0 channel output 0 level
                                1: Raw CH0 channel output 1 level</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CLKSRC</name>
                    <description>PWMPLUS0_CLKSRC</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PREDIV</name>
                            <description>Internal prescaled clock frequency selection. Use the pclk of this module as the clock source of the prescaled clock.
                                0x0000: indicates 1 division of pclk
                                0x0001: Indicates the 2-division frequency of pclk.
                                0x0002: Indicates the 3-division frequency of pclk
                                ......
                                0xFFFF: indicates the 65536 division frequency of pclk</description>
                            <bitRange>[31:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EXTPLUS1_EDGE</name>
                            <description>ExtPLUS1 Edge Selection Control for Count Clock
                                0: Falling edge trigger count
                                1: Rising edge trigger count</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EXTPLUS0_EDGE</name>
                            <description>ExtPLUS0 Edge selection control when used as count clock
                                0: Falling edge trigger count
                                1: Rising edge trigger count</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_SRC</name>
                            <description>PWM Counter Count Clock Selection
                                000: Select internal pre-divided clock as count clock
                                001: Select extPLUS[0] as the count clock
                                010: Select extPLUS[1] as the count clock
                                011: Select tmPLUS[0] as the count clock
                                100: Select tmPLUS[1] as count clock
                                101: Select tmPLUS[2] as count clock
                                110: Select tmPLUS[3] as the count clock</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_BRAKE_CFG</name>
                    <description>PWMPLUS0_BRAKE_CFG</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BRAKE_FILTER</name>
                            <description>Digital filtering control of brake signals
                                00: No filtering
                                01: 2 internal pre-scaler clock filters performed
                                10: 4 internal pre-scaler clock filters performed
                                11: 8 internal pre-scaler clock filtering</description>
                            <bitRange>[25:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH2NPOL</name>
                            <description>CH2N output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH2POL</name>
                            <description>CH2 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH1NPOL</name>
                            <description>CH1N output level selection when braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH1POL</name>
                            <description>CH1 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH0NPOL</name>
                            <description>CH0N output level selection when braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH0POL</name>
                            <description>CH0 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_LEV</name>
                            <description>Brake effective level selection Bit2 of BRAKE_LEV corresponds to brakein[2], and Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates that the brake input is active low
                                1: Indicates that the brake input is active high</description>
                            <bitRange>[14:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_BRAKE</name>
                            <description>CH2/CH2N Brake Control Selection Bit2 of CH2_BRAKE corresponds to brakein[2], and Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[8:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_BRAKE</name>
                            <description>CH1/CH1N Brake control selection Bit2 of CH1_BRAKE corresponds to brakein[2], Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_BRAKE</name>
                            <description>CH0/CH0N Brake control selection Bit2 of CH0_BRAKE corresponds to brakein[2], Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_MASK_LEV</name>
                    <description>PWMPLUS0_MASK_LEV</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_MASK_LEV</name>
                            <description>CH2N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_MASK_LEV</name>
                            <description>CH2 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_MASK_LEV</name>
                            <description>CH1N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_MASK_LEV</name>
                            <description>CH1 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_MASK_LEV</name>
                            <description>CH0N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_MASK_LEV</name>
                            <description>CH0 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_PERIOD</name>
                    <description>PWMPLUS0_PERIOD</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>PERIOD</name>
                            <description>PWMPLUS Cycle Configuration Register. The actual counting period is the value of the period configured for this register plus 1.
                                Note 0: The period cannot be configured as 0. For example, if the configuration is decimal 199, the PWM waveform period is considered to be 200.
                                NOTE 1: In center-aligned mode, the actual period is 2 times the configured value plus 1.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH0_COMP</name>
                    <description>PWMPLUS0_CH0_COMP</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_COMP</name>
                            <description>CH0/CH0N Flip Point Configuration Register.
                                Note: If the count value is less than the flip-point value, output start[0]; if it is greater than or equal to the flip-point value, output start[0] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH1_COMP</name>
                    <description>PWMPLUS0_CH1_COMP</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_COMP</name>
                            <description>CH1/CH1N Flip Point Configuration Register.
                                Note: If the count value is less than the flip point value, output start[1]; if it is greater than or equal to the flip point value, output start[1] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH2_COMP</name>
                    <description>PWMPLUS0_CH2_COMP</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_COMP</name>
                            <description>CH2/CH2N Flip Point Configuration Register.
                                Note: If the count value is less than the flip point value, output start[2]; if it is greater than or equal to the flip point value, output start[2] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH0_DT</name>
                    <description>PWMPLUS0_CH0_DT</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_DT</name>
                            <description>CH0/CH0N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the cycle value, CH0_START value and CH0_COMP value, otherwise the output waveform may not achieve the expected effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH1_DT</name>
                    <description>PWMPLUS0_CH1_DT</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_DT</name>
                            <description>CH1/CH1N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the period value, CH1_START value and CH1_COMP value, otherwise the output waveform may not achieve the expected effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CH2_DT</name>
                    <description>PWMPLUS0_CH2_DT</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_DT</name>
                            <description>CH2/CH2N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the period value, CH2_START value and CH2_COMP value, otherwise the output waveform may not achieve the desired effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_TRIG_COMP</name>
                    <description>PWMPLUS0_TRIG_COMP</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIG_COMP</name>
                            <description>Internal Trigger Point Configuration Register
                                Note: The internal trigger point value must be less than the cycle value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_TRIG_CFG</name>
                    <description>PWMPLUS0_TRIG_CFG</description>
                    <addressOffset>0x44</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIRGOUT_L_SEL</name>
                            <description>Output trigger0 signal function selection
                                0000: No signal output;
                                0001: Up count cycle overflow point;
                                0010: Down count cycle overflow point;
                                0011: Up or down count cycle overflow point;
                                0100: CH0 Counts up the flip point;
                                0101: CH0 Count down the flip point;
                                0110: CH0 Flip point up or down;
                                0111: CH1 Counts up the flip point;
                                1000: CH1 Counts down the flip point;
                                1001: CH1 Flip point up or down;
                                1010: CH2 Up Count Flip Point;
                                1011: CH2 Count down flip point;
                                1100: CH2 Flip point up or down;
                                1101: Count up internal trigger points;
                                1110: Count down internal trigger points;
                                1111: Up or down internal trigger point;</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_IE</name>
                    <description>PWMPLUS0_IE</description>
                    <addressOffset>0x60</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTORELOAD_IE</name>
                            <description>Autoload Interrupt Enable</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK2_IE</name>
                            <description>Brake 2 Interrupt Enable</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK1_IE</name>
                            <description>Brake 1 Interrupt enable</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK0_IE</name>
                            <description>Brake 0 Interrupt enable</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_TRIG_IE</name>
                            <description>Count down to TRIGGER Trigger Point Interrupt Enable</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_POF_IE</name>
                            <description>Down count cycle overflow interrupt enable</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH2COMP_IE</name>
                            <description>Count Down CH2 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH1COMP_IE</name>
                            <description>Count Down CH1 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH0COMP_IE</name>
                            <description>Count Down CH0 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_TRIG_IE</name>
                            <description>Count up to TRIGGER Trigger Point Interrupt Enable</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_POF_IE</name>
                            <description>Up count cycle overflow interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH2COMP_IE</name>
                            <description>Count Up CH2 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH1COMP_IE</name>
                            <description>Count Up CH1 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH0COMP_IE</name>
                            <description>Count Up CH0 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_IF</name>
                    <description>PWMPLUS0_IF</description>
                    <addressOffset>0x64</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTORELOAD_IF</name>
                            <description>Auto Load Interrupt Status Write 1 Clear</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK2_IF</name>
                            <description>Brake 2 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 2 signal.</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK1_IF</name>
                            <description>Brake 1 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 1 signal.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK0_IF</name>
                            <description>Brake 0 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 0 signal.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_TRIG_IF</name>
                            <description>Count down to TRIGGER Trigger Point Interrupt Status Write 1 Zeroed
                                Note: Edge-aligned mode, indicates that the internal trigger point is reached when configured for counting down; center-aligned mode, indicates that the internal trigger point is reached in the first half-cycle when configured for counting down or the internal trigger point is reached in the second half-cycle when configured for counting up</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_POF_IF</name>
                            <description>Down Count Cycle Overflow Interrupt Status Write 1 Clear
                                Note: Edge-aligned mode, indicates that the cycle overflow point is reached when configured for counting down; center-aligned mode, indicates that the cycle overflow point is reached in the first half-cycle when configured for counting down or in the second half-cycle when configured for counting up</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH2COMP_IF</name>
                            <description>Count down CH2 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH1COMP_IF</name>
                            <description>Count down CH1 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH0COMP_IF</name>
                            <description>Count down CH0 Reach flip-flop interrupt status write 1 clear
                                Note: Edge-aligned mode means that the flip point is reached when configured to count down; center-aligned mode means that the flip point is reached in the first half cycle when configured to count down or in the second half cycle when configured to count up. The other channel behaviors are the same.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_TRIG_IF</name>
                            <description>Count up to TRIGGER Trigger Point Interrupt Status Write 1 Zeroed
                                Note: Edge-aligned mode means that the internal trigger point is reached when configured to count up; center-aligned mode means that the internal trigger point is reached in the first half-cycle when configured to count up or in the second half-cycle when configured to count down</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_POF_IF</name>
                            <description>Up Count Cycle Overflow Interrupt Status Write 1 Clear
                                Note: Edge-aligned mode means that the cycle overflow point is reached when configured for counting up; center-aligned mode means that the cycle overflow point is reached in the first half of the cycle when configured for counting up or in the second half of the cycle when configured for counting down</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH2COMP_IF</name>
                            <description>Count up CH2 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH1COMP_IF</name>
                            <description>Count up CH1 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH0COMP_IF</name>
                            <description>Count up CH0 Reach flip-flop interrupt status write 1 clear
                                Note: Edge-aligned mode means that the flip point is reached when configured to count up; center-aligned mode means that the flip point is reached in the first half-cycle when configured to count up or the flip point is reached in the second half-cycle when configured to count down. The other channel behaviors are the same.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_SWLOAD</name>
                    <description>PWMPLUS0_SWLOAD</description>
                    <addressOffset>0x84</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SWLOAD</name>
                            <description>PWM Configuration Register Software LOAD Control Bit In this module, the eight registers PWM_PERIOD, PWM_CH0_COMP, PWM_CH1_COMP, PWM_CH2_COMP, PWM_CH0_DT, PWM_CH1_DT, PWM_CH2_DT, TRIG_COMP, PWM_CH0_DT, PWM_CH1_DT, PWM_CH2_DT, and TRIG_COMP are used. The memory has its own shadow register. After software writes a 1 to this bit, the latest values stored in these 8 registers will be used by the device at the end of the current cycle. load into their respective shadow registers and take effect on the next cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_MASK_EN</name>
                    <description>PWMPLUS0_MASK_EN</description>
                    <addressOffset>0x88</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_MASK_EN</name>
                            <description>CH2N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_MASK_EN</name>
                            <description>CH2 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_MASK_EN</name>
                            <description>CH1N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_MASK_EN</name>
                            <description>CH1 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_MASK_EN</name>
                            <description>CH0N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_MASK_EN</name>
                            <description>CH0 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_CNT_ST</name>
                    <description>PWMPLUS0_CNT_ST</description>
                    <addressOffset>0xE0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CNT_ST</name>
                            <description>PWM Counter Operating Status
                                0: Indicates that the counter is not working
                                1: Indicates that the counter is counting</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CNT_DIR</name>
                            <description>PWM Counter Current Count Direction
                                0: Indicates that the counter is currently counting up
                                1: Indicates that the counter is currently counting down</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>PWMPLUS_CNT</name>
                            <description>PWM Counter Current Count Value Register</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS0_BRAKE_ST</name>
                    <description>PWMPLUS0_BRAKE_ST</description>
                    <addressOffset>0xE4</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BRAKE_ST</name>
                            <description>Current status of brake input signal BRAKE_ST[1] corresponds to brake1 and BRAKE_ST[0] corresponds to brake0.</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>PWM_PLUS1</name>
            <description>PWM_PLUS1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B4800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>PWM_PLUS1</name>
                <value>12</value>
            </interrupt>
            <registers>
                <register>
                    <name>PWMPLUS1_CFG</name>
                    <description>PWMPLUS1_CFG</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTO_RELOAD</name>
                            <description>Auto-Load Register, which indicates how many times after a cycle overflow the cycle value, compare value, deadband value and TRIGGER value are automatically loaded once. The autoload action performs an autoload after (AUTO_RELOAD+1) cycle overflow.</description>
                            <bitRange>[15:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OUT_MODE</name>
                            <description>PWM output mode
                                0: Edge aligned mode output
                                1: Center-aligned mode output</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_REP</name>
                            <description>PWM Counter Cycle Method
                                0: Single, stop after one counting cycle
                                1: Loop, start and count in a loop until the software stops</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_TYPE</name>
                            <description>PWM Counter Behavior
                                0: count up
                                1: Counting down If center-aligned mode, it indicates the counting behavior of the first half cycle of the counter.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>COUNTER_EN</name>
                            <description>Counter Enable Register When this bit is set to 1, it means that the counter starts counting, and CH0/CH1/CH2 generate the PWM output waveforms of the corresponding channels according to the pre-configured period value, comparison value and deadband value. When configured for the one-shot method, this bit is automatically cleared by the hardware after one clock cycle. When configured for cyclic mode, this bit needs to be cleared to zero by the software to stop the counter counting, and the output waveform level returns to the IDLE state after one full counting cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_GEN</name>
                    <description>PWMPLUS1_GEN</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_OE</name>
                            <description>CH2N Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH2N square wave</description>
                            <bitRange>[29:29]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OE</name>
                            <description>CH2 Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH2 square wave</description>
                            <bitRange>[28:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_OE</name>
                            <description>CH1N Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH1N square wave</description>
                            <bitRange>[27:27]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OE</name>
                            <description>CH1 Channel waveform output enable
                                0: Output off, high resistance on pin
                                1: Output CH1 square wave</description>
                            <bitRange>[26:26]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_OE</name>
                            <description>CH0N Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0N square wave</description>
                            <bitRange>[25:25]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OE</name>
                            <description>CH0 Channel waveform output enable
                                0: Output off, high resistance state on pin
                                1: Output CH0 square wave</description>
                            <bitRange>[24:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2N_OUTINV</name>
                            <description>CH2N Channel Output Status Selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_OUTINV</name>
                            <description>CH2 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_OUTINV</name>
                            <description>CH1N Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_OUTINV</name>
                            <description>CH1 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_OUTINV</name>
                            <description>CH0N Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_OUTINV</name>
                            <description>CH0 Channel output state selection
                                0: No change in level
                                1: Output level reversal</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_START</name>
                            <description>Raw CH2 Output status value at start of channel counting
                                0: Raw CH2 channel output 0 level
                                1: The original CH2 channel outputs a level of 1. When counting starts, CH2N is the inverse of CH2.</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_START</name>
                            <description>Raw CH1 Output status value at start of channel counting
                                0: Raw CH1 channel output 0 level
                                1: The original CH1 channel outputs 1 level. After counting starts, CH1N is the inverse of CH1.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_START</name>
                            <description>Output status value when raw CH0 channel starts counting
                                0: Raw CH0 channel output 0 level
                                1: The original CH0 channel outputs a level of 1. When counting starts, CH0N is the inverse of CH0.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2N_IDLE</name>
                            <description>Raw CH2N output status value when channel is idle
                                0: raw CH2N channel output 0 level
                                1: Raw CH2N channel output 1 level</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_IDLE</name>
                            <description>Raw CH2 Output status value when channel is idle
                                0: Raw CH2 channel output 0 level
                                1: Raw CH2 channel output 1 level</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_IDLE</name>
                            <description>Raw CH1N Output status value when channel is idle
                                0: raw CH1N channel output 0 level
                                1: Raw CH1N channel output 1 level</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_IDLE</name>
                            <description>Raw CH1 Output status value when channel is idle
                                0: Raw CH1 channel output 0 level
                                1: Raw CH1 channel output 1 level</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_IDLE</name>
                            <description>Raw CH0N Output status value when channel is idle
                                0: raw CH0N channel output 0 level
                                1: Raw CH0N channel output 1 level</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_IDLE</name>
                            <description>Raw CH0 Output status value when channel is idle
                                0: Raw CH0 channel output 0 level
                                1: Raw CH0 channel output 1 level</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CLKSRC</name>
                    <description>PWMPLUS1_CLKSRC</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>PREDIV</name>
                            <description>Internal prescaled clock frequency selection. Use the pclk of this module as the clock source of the prescaled clock.
                                0x0000: indicates 1 division of pclk
                                0x0001: Indicates the 2-division frequency of pclk.
                                0x0002: Indicates the 3-division frequency of pclk
                                ......
                                0xFFFF: indicates the 65536 division frequency of pclk</description>
                            <bitRange>[31:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EXTPLUS1_EDGE</name>
                            <description>ExtPLUS1 Edge Selection Control for Count Clock
                                0: Falling edge trigger count
                                1: Rising edge trigger count</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EXTPLUS0_EDGE</name>
                            <description>ExtPLUS0 Edge selection control when used as count clock
                                0: Falling edge trigger count
                                1: Rising edge trigger count</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CNT_SRC</name>
                            <description>PWM Counter Count Clock Selection
                                000: Select internal pre-divided clock as count clock
                                001: Select extPLUS[0] as the count clock
                                010: Select extPLUS[1] as the count clock
                                011: Select tmPLUS[0] as the count clock
                                100: Select tmPLUS[1] as count clock
                                101: Select tmPLUS[2] as count clock
                                110: Select tmPLUS[3] as the count clock</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_BRAKE_CFG</name>
                    <description>PWMPLUS1_BRAKE_CFG</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BRAKE_FILTER</name>
                            <description>Digital filtering control of brake signals
                                00: No filtering
                                01: 2 internal pre-scaler clock filters performed
                                10: 4 internal pre-scaler clock filters performed
                                11: 8 internal pre-scaler clock filtering</description>
                            <bitRange>[25:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH2NPOL</name>
                            <description>CH2N output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[21:21]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH2POL</name>
                            <description>CH2 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[20:20]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH1NPOL</name>
                            <description>CH1N output level selection when braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH1POL</name>
                            <description>CH1 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH0NPOL</name>
                            <description>CH0N output level selection when braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_CH0POL</name>
                            <description>CH0 output level selection during braking
                                0: Output when braking 0
                                1: Output when braking 1</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAKE_LEV</name>
                            <description>Brake effective level selection Bit2 of BRAKE_LEV corresponds to brakein[2], and Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates that the brake input is active low
                                1: Indicates that the brake input is active high</description>
                            <bitRange>[14:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_BRAKE</name>
                            <description>CH2/CH2N Brake Control Selection Bit2 of CH2_BRAKE corresponds to brakein[2], and Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[8:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_BRAKE</name>
                            <description>CH1/CH1N Brake control selection Bit2 of CH1_BRAKE corresponds to brakein[2], Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[5:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_BRAKE</name>
                            <description>CH0/CH0N Brake control selection Bit2 of CH0_BRAKE corresponds to brakein[2], Bit1 corresponds to brakein[1], Bit0 corresponds to brakein[0].
                                0: Indicates not controlled by brake signal
                                1: Indicates controlled by brake signal</description>
                            <bitRange>[2:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_MASK_LEV</name>
                    <description>PWMPLUS1_MASK_LEV</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_MASK_LEV</name>
                            <description>CH2N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_MASK_LEV</name>
                            <description>CH2 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_MASK_LEV</name>
                            <description>CH1N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_MASK_LEV</name>
                            <description>CH1 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_MASK_LEV</name>
                            <description>CH0N Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_MASK_LEV</name>
                            <description>CH0 Channel Mask Level Selection
                                0: Masking period forced output 0
                                1: Masking period mandatory output 1</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_PERIOD</name>
                    <description>PWMPLUS1_PERIOD</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0xFFFF</resetValue>
                    <fields>
                        <field>
                            <name>PERIOD</name>
                            <description>PWMPLUS Cycle Configuration Register. The actual counting period is the value of the period configured for this register plus 1.
                                Note 0: The period cannot be configured as 0. For example, if the configuration is decimal 199, the PWM waveform period is considered to be 200.
                                NOTE 1: In center-aligned mode, the actual period is 2 times the configured value plus 1.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH0_COMP</name>
                    <description>PWMPLUS1_CH0_COMP</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_COMP</name>
                            <description>CH0/CH0N Flip Point Configuration Register.
                                Note: If the count value is less than the flip-point value, output start[0]; if it is greater than or equal to the flip-point value, output start[0] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH1_COMP</name>
                    <description>PWMPLUS1_CH1_COMP</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_COMP</name>
                            <description>CH1/CH1N Flip Point Configuration Register.
                                Note: If the count value is less than the flip point value, output start[1]; if it is greater than or equal to the flip point value, output start[1] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH2_COMP</name>
                    <description>PWMPLUS1_CH2_COMP</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_COMP</name>
                            <description>CH2/CH2N Flip Point Configuration Register.
                                Note: If the count value is less than the flip point value, output start[2]; if it is greater than or equal to the flip point value, output start[2] not.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH0_DT</name>
                    <description>PWMPLUS1_CH0_DT</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH0_DT</name>
                            <description>CH0/CH0N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the cycle value, CH0_START value and CH0_COMP value, otherwise the output waveform may not achieve the expected effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH1_DT</name>
                    <description>PWMPLUS1_CH1_DT</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH1_DT</name>
                            <description>CH1/CH1N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the period value, CH1_START value and CH1_COMP value, otherwise the output waveform may not achieve the expected effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CH2_DT</name>
                    <description>PWMPLUS1_CH2_DT</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2_DT</name>
                            <description>CH2/CH2N Deadband Length Configuration Registers
                                Note 0: A configuration of 0 means no deadband; a configuration of 1 means a deadband length of 1, a configuration of 2 means a deadband length of 2, and so on.
                                Note 1: When configuring this value, it is necessary to match with the period value, CH2_START value and CH2_COMP value, otherwise the output waveform may not achieve the desired effect.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_TRIG_COMP</name>
                    <description>PWMPLUS1_TRIG_COMP</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TRIG_COMP</name>
                            <description>Internal Trigger Point Configuration Register
                                Note: The internal trigger point value must be less than the cycle value</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_TRIG_CFG</name>
                    <description>PWMPLUS1_TRIG_CFG</description>
                    <addressOffset>0x44</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TIRGOUT_L_SEL</name>
                            <description>Output trigger0 signal function selection
                                0000: No signal output;
                                0001: Up count cycle overflow point;
                                0010: Down count cycle overflow point;
                                0011: Up or down count cycle overflow point;
                                0100: CH0 Counts up the flip point;
                                0101: CH0 Count down the flip point;
                                0110: CH0 Flip point up or down;
                                0111: CH1 Counts up the flip point;
                                1000: CH1 Counts down the flip point;
                                1001: CH1 Flip point up or down;
                                1010: CH2 Up Count Flip Point;
                                1011: CH2 Count down flip point;
                                1100: CH2 Flip point up or down;
                                1101: Count up internal trigger points;
                                1110: Count down internal trigger points;
                                1111: Up or down internal trigger point;</description>
                            <bitRange>[3:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_IE</name>
                    <description>PWMPLUS1_IE</description>
                    <addressOffset>0x60</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTORELOAD_IE</name>
                            <description>Autoload Interrupt Enable</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK2_IE</name>
                            <description>Brake 2 Interrupt Enable</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK1_IE</name>
                            <description>Brake 1 Interrupt enable</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BRAK0_IE</name>
                            <description>Brake 0 Interrupt enable</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_TRIG_IE</name>
                            <description>Count down to TRIGGER Trigger Point Interrupt Enable</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_POF_IE</name>
                            <description>Down count cycle overflow interrupt enable</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH2COMP_IE</name>
                            <description>Count Down CH2 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH1COMP_IE</name>
                            <description>Count Down CH1 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_CH0COMP_IE</name>
                            <description>Count Down CH0 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_TRIG_IE</name>
                            <description>Count up to TRIGGER Trigger Point Interrupt Enable</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_POF_IE</name>
                            <description>Up count cycle overflow interrupt enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH2COMP_IE</name>
                            <description>Count Up CH2 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH1COMP_IE</name>
                            <description>Count Up CH1 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_CH0COMP_IE</name>
                            <description>Count Up CH0 Reach Flip Point Interrupt Enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_IF</name>
                    <description>PWMPLUS1_IF</description>
                    <addressOffset>0x64</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>AUTORELOAD_IF</name>
                            <description>Auto Load Interrupt Status Write 1 Clear</description>
                            <bitRange>[19:19]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK2_IF</name>
                            <description>Brake 2 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 2 signal.</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK1_IF</name>
                            <description>Brake 1 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 1 signal.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>BRAK0_IF</name>
                            <description>Brake 0 Interrupt status Write 1 Clear
                                Note: This state is only generated if any channel is controlled by the Brake 0 signal.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_TRIG_IF</name>
                            <description>Count down to TRIGGER Trigger Point Interrupt Status Write 1 Zeroed
                                Note: Edge-aligned mode, indicates that the internal trigger point is reached when configured for counting down; center-aligned mode, indicates that the internal trigger point is reached in the first half-cycle when configured for counting down or the internal trigger point is reached in the second half-cycle when configured for counting up</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DOWN_POF_IF</name>
                            <description>Down Count Cycle Overflow Interrupt Status Write 1 Clear
                                Note: Edge-aligned mode, indicates that the cycle overflow point is reached when configured for counting down; center-aligned mode, indicates that the cycle overflow point is reached in the first half-cycle when configured for counting down or in the second half-cycle when configured for counting up</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH2COMP_IF</name>
                            <description>Count down CH2 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH1COMP_IF</name>
                            <description>Count down CH1 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>DOWN_CH0COMP_IF</name>
                            <description>Count down CH0 Reach flip-flop interrupt status write 1 clear
                                Note: Edge-aligned mode means that the flip point is reached when configured to count down; center-aligned mode means that the flip point is reached in the first half cycle when configured to count down or in the second half cycle when configured to count up. The other channel behaviors are the same.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_TRIG_IF</name>
                            <description>Count up to TRIGGER Trigger Point Interrupt Status Write 1 Zeroed
                                Note: Edge-aligned mode means that the internal trigger point is reached when configured to count up; center-aligned mode means that the internal trigger point is reached in the first half-cycle when configured to count up or in the second half-cycle when configured to count down</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>UP_POF_IF</name>
                            <description>Up Count Cycle Overflow Interrupt Status Write 1 Clear
                                Note: Edge-aligned mode means that the cycle overflow point is reached when configured for counting up; center-aligned mode means that the cycle overflow point is reached in the first half of the cycle when configured for counting up or in the second half of the cycle when configured for counting down</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH2COMP_IF</name>
                            <description>Count up CH2 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH1COMP_IF</name>
                            <description>Count up CH1 Reach flip-flop interrupt status write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>UP_CH0COMP_IF</name>
                            <description>Count up CH0 Reach flip-flop interrupt status write 1 clear
                                Note: Edge-aligned mode means that the flip point is reached when configured to count up; center-aligned mode means that the flip point is reached in the first half-cycle when configured to count up or the flip point is reached in the second half-cycle when configured to count down. The other channel behaviors are the same.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_SWLOAD</name>
                    <description>PWMPLUS1_SWLOAD</description>
                    <addressOffset>0x84</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SWLOAD</name>
                            <description>PWM Configuration Register Software LOAD Control Bit In this module, the eight registers PWM_PERIOD, PWM_CH0_COMP, PWM_CH1_COMP, PWM_CH2_COMP, PWM_CH0_DT, PWM_CH1_DT, PWM_CH2_DT, TRIG_COMP, PWM_CH0_DT, PWM_CH1_DT, PWM_CH2_DT, and TRIG_COMP are used. The memory has its own shadow register. After software writes a 1 to this bit, the latest values stored in these 8 registers will be used by the device at the end of the current cycle. load into their respective shadow registers and take effect on the next cycle.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_MASK_EN</name>
                    <description>PWMPLUS1_MASK_EN</description>
                    <addressOffset>0x88</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CH2N_MASK_EN</name>
                            <description>CH2N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH2_MASK_EN</name>
                            <description>CH2 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1N_MASK_EN</name>
                            <description>CH1N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH1_MASK_EN</name>
                            <description>CH1 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0N_MASK_EN</name>
                            <description>CH0N Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CH0_MASK_EN</name>
                            <description>CH0 Channel Mask Enable Writing this bit to 1 activates the forced output mask function, and the forced output level is selected via MASK_CFG.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_CNT_ST</name>
                    <description>PWMPLUS1_CNT_ST</description>
                    <addressOffset>0xE0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>CNT_ST</name>
                            <description>PWM Counter Operating Status
                                0: Indicates that the counter is not working
                                1: Indicates that the counter is counting</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CNT_DIR</name>
                            <description>PWM Counter Current Count Direction
                                0: Indicates that the counter is currently counting up
                                1: Indicates that the counter is currently counting down</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>PWMPLUS_CNT</name>
                            <description>PWM Counter Current Count Value Register</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>PWMPLUS1_BRAKE_ST</name>
                    <description>PWMPLUS1_BRAKE_ST</description>
                    <addressOffset>0xE4</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>BRAKE_ST</name>
                            <description>Current status of brake input signal BRAKE_ST[1] corresponds to brake1 and BRAKE_ST[0] corresponds to brake0.</description>
                            <bitRange>[1:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>SPI0</name>
            <description>SPI0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B8000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>SPI0</name>
                <value>16</value>
            </interrupt>
            <registers>
                <register>
                    <name>SPI0_CR</name>
                    <description>SPI control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1010</resetValue>
                    <fields>
                        <field>
                            <name>TF_CLR</name>
                            <description>Send FIFO Clear Bit Software Write 1 Clear Transmit FIFO, Hardware Auto-Clear</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RF_CLR</name>
                            <description>Receive FIFO Clear Bit Software Write 1 Clear Receive FIFO, Hardware Auto-Clear</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXDMAEN</name>
                            <description>Send DMA control enable bit
                                1: Indicates the transmit data register for DMA operation SPI.
                                0: Indicates that the CPU operates the SPI transmit data register.</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXDMAEN</name>
                            <description>Receive DMA control enable bit
                                1: Indicates the receive data register for DMA operation SPI.
                                0: Indicates that the CPU operates the receive data register of the SPI.</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MSR_SSN</name>
                            <description>SSN output in master mode, default output 1 This register is only valid in master mode</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPHA_DATAHOLD_S</name>
                            <description>Data Hold Time Configuration Register when CPHA is 1 in Slave Mode
                                0000: 1 pclk
                                0001: 2 pclk
                                ......
                                1111: 16 pclk</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LSB</name>
                            <description>Data transfer sequence selection
                                0: MSB
                                1: LSB</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MSTR</name>
                            <description>Master-Slave mode selection
                                0 = SPI system configured in slave mode
                                1 = SPI system configured as master device mode</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPOL</name>
                            <description>Clock Polarity Selection
                                0 = Serial clock idle state is low, active level is high
                                1 = Serial clock idle state is high, active level is low</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPHA</name>
                            <description>Clock phase selection
                                0 = sample data at the first edge of the serial clock jump
                                1 = Sample data on the second edge of the serial clock jump</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPE</name>
                            <description>SPI System Enable
                                0 = SPI system shutdown
                                1 = SPI system enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR2</name>
                            <description>SPI baud rate select bit 2</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR1</name>
                            <description>SPI baud rate select bit 1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR0</name>
                            <description>SPI baud rate select bit 0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI0_WDR</name>
                    <description>SPI write data register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SPIWDR</name>
                            <description>SPI writes the data to be sent to the transmit FIFO through the SPIWDR register. When the data is ready to be sent, the shift register reads the transmit FIFO directly to send the data.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI0_RDR</name>
                    <description>SPI read data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SPIRDR</name>
                            <description>SPI reads the received data through the SPIRDR register. The shift register stores the data in the receive FIFO after each transmission is completed and reads the data in the receive FIFO through the SPIRDR register.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI0_IE</name>
                    <description>SPI interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half-full interrupt enable</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Transmit FIFO air-break enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO overflow interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI0_IF</name>
                    <description>SPI Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x08</resetValue>
                    <fields>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half-full Flag Write 1 Clear</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Send FIFO Empty Flag Write 1 Clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full flag write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full flag write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO Overflow Flag Write 1 Clear
                                Note: Data after overflow will be discarded.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI0_FIFOST</name>
                    <description>SPI FIFO status register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x09</resetValue>
                    <fields>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Send FIFO water level status
                                000: If the FIFO is not full, it means that there is 0 data in the FIFO, and if it is full, it means that there is 0 data in the FIFO.
                                8 data;
                                001: Indicates that the FIFO has 1 data;
                                010: Indicates that the FIFO has 2 data;
                                011: Indicates that the FIFO has 3 data;
                                100: Indicates that the FIFO has 4 data;
                                101: Indicates that the FIFO has 5 data;
                                110: Indicates that the FIFO has 6 data;
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[11:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Receive FIFO water level status
                                000: If the FIFO is not full, it means that there is 0 data in the FIFO, and if it is full, it means that there is 0 data in the FIFO.
                                8 data;
                                001: Indicates that the FIFO has 1 data;
                                010: Indicates that the FIFO has 2 data;
                                011: Indicates that the FIFO has 3 data;
                                100: Indicates that the FIFO has 4 data;
                                101: Indicates that the FIFO has 5 data;
                                110: Indicates that the FIFO has 6 data;
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[8:6]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFHF</name>
                            <description>Send FIFO half full flag</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFF</name>
                            <description>Send FIFO full flag</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFE</name>
                            <description>Send FIFO Empty Flag</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFHF</name>
                            <description>Receive FIFO half-full flag</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFF</name>
                            <description>Receive FIFO full flag</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFE</name>
                            <description>Receive FIFO empty flag</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>SPI1</name>
            <description>SPI1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B8800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>SPI1</name>
                <value>17</value>
            </interrupt>
            <registers>
                <register>
                    <name>SPI1_CR</name>
                    <description>SPI control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x1010</resetValue>
                    <fields>
                        <field>
                            <name>TF_CLR</name>
                            <description>Send FIFO Clear Bit Software Write 1 Clear Transmit FIFO, Hardware Auto-Clear</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RF_CLR</name>
                            <description>Receive FIFO Clear Bit Software Write 1 Clear Receive FIFO, Hardware Auto-Clear</description>
                            <bitRange>[15:15]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXDMAEN</name>
                            <description>Send DMA control enable bit
                                1: Indicates the transmit data register for DMA operation SPI.
                                0: Indicates that the CPU operates the SPI transmit data register.</description>
                            <bitRange>[14:14]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXDMAEN</name>
                            <description>Receive DMA control enable bit
                                1: Indicates the receive data register for DMA operation SPI.
                                0: Indicates that the CPU operates the receive data register of the SPI.</description>
                            <bitRange>[13:13]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MSR_SSN</name>
                            <description>SSN output in master mode, default output 1 This register is only valid in master mode</description>
                            <bitRange>[12:12]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPHA_DATAHOLD_S</name>
                            <description>Data Hold Time Configuration Register when CPHA is 1 in Slave Mode
                                0000: 1 pclk
                                0001: 2 pclk
                                ......
                                1111: 16 pclk</description>
                            <bitRange>[11:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>LSB</name>
                            <description>Data transfer sequence selection
                                0: MSB
                                1: LSB</description>
                            <bitRange>[7:7]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MSTR</name>
                            <description>Master-Slave mode selection
                                0 = SPI system configured in slave mode
                                1 = SPI system configured as master device mode</description>
                            <bitRange>[6:6]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPOL</name>
                            <description>Clock Polarity Selection
                                0 = Serial clock idle state is low, active level is high
                                1 = Serial clock idle state is high, active level is low</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPHA</name>
                            <description>Clock phase selection
                                0 = sample data at the first edge of the serial clock jump
                                1 = Sample data on the second edge of the serial clock jump</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPE</name>
                            <description>SPI System Enable
                                0 = SPI system shutdown
                                1 = SPI system enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR2</name>
                            <description>SPI baud rate select bit 2</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR1</name>
                            <description>SPI baud rate select bit 1</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SPR0</name>
                            <description>SPI baud rate select bit 0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI1_WDR</name>
                    <description>SPI write data register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SPIWDR</name>
                            <description>SPI writes the data to be sent to the transmit FIFO through the SPIWDR register. When the data is ready to be sent, the shift register reads the transmit FIFO directly to send the data.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI1_RDR</name>
                    <description>SPI read data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>SPIRDR</name>
                            <description>SPI reads the received data through the SPIRDR register. The shift register stores the data in the receive FIFO after each transmission is completed and reads the data in the receive FIFO through the SPIRDR register.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI1_IE</name>
                    <description>SPI interrupt enable register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half-full interrupt enable</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Transmit FIFO air-break enable</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full interrupt enable</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full interrupt enable</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO overflow interrupt enable</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI1_IF</name>
                    <description>SPI Interrupt Status Register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x08</resetValue>
                    <fields>
                        <field>
                            <name>TXFIFO_HFULL</name>
                            <description>Send FIFO half-full Flag Write 1 Clear</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXFIFO_EMPTY</name>
                            <description>Send FIFO Empty Flag Write 1 Clear</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_HFULL</name>
                            <description>Receive FIFO half-full flag write 1 clear</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_FULL</name>
                            <description>Receive FIFO full flag write 1 clear</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXFIFO_OVF</name>
                            <description>Receive FIFO Overflow Flag Write 1 Clear
                                Note: Data after overflow will be discarded.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SPI1_FIFOST</name>
                    <description>SPI FIFO status register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x09</resetValue>
                    <fields>
                        <field>
                            <name>TF_LEVEL</name>
                            <description>Send FIFO water level status
                                000: If the FIFO is not full, it means that there is 0 data in the FIFO, and if it is full, it means that there is 0 data in the FIFO. 8 data;
                                001: Indicates that the FIFO has 1 data;
                                010: Indicates that the FIFO has 2 data;
                                011: Indicates that the FIFO has 3 data;
                                100: Indicates that the FIFO has 4 data;
                                101: Indicates that the FIFO has 5 data;
                                110: Indicates that the FIFO has 6 data;
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[11:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RF_LEVEL</name>
                            <description>Receive FIFO water level status
                                000: If the FIFO is not full, it means that there is 0 data in the FIFO, and if it is full, it means that there is 0 data in the FIFO. 8 data;
                                001: Indicates that the FIFO has 1 data;
                                010: Indicates that the FIFO has 2 data;
                                011: Indicates that the FIFO has 3 data;
                                100: Indicates that the FIFO has 4 data;
                                101: Indicates that the FIFO has 5 data;
                                110: Indicates that the FIFO has 6 data;
                                111: Indicates that the FIFO has 7 data;</description>
                            <bitRange>[8:6]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFHF</name>
                            <description>Send FIFO half full flag</description>
                            <bitRange>[5:5]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFF</name>
                            <description>Send FIFO full flag</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TFE</name>
                            <description>Send FIFO Empty Flag</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFHF</name>
                            <description>Receive FIFO half-full flag</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFF</name>
                            <description>Receive FIFO full flag</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RFE</name>
                            <description>Receive FIFO empty flag</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>IIC0</name>
            <description>IIC0 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B9000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>IIC0</name>
                <value>18</value>
            </interrupt>
            <registers>
                <register>
                    <name>IIC0_CCFG</name>
                    <description>General Configuration Register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x18</resetValue>
                    <fields>
                        <field>
                            <name>DNF</name>
                            <description>Receive SDA, SCL Digital Noise Filter
                                0000: Filter not enabled
                                0001: Filter enable and filter capacity up to 1 system clock
                                ......
                                1111: Filter enable and filter capacity up to 15 system clocks</description>
                            <bitRange>[6:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MODE</name>
                            <description>Mode Control
                                0: slave mode
                                1: master mode</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EN</name>
                            <description>IIC Bus Enable
                                0: not enabled
                                1: Enabling</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_CST</name>
                    <description>General Status Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x06</resetValue>
                    <fields>
                        <field>
                            <name>SLV_RXDT</name>
                            <description>The type of data received by the Slave. Valid only in Slave mode.
                                00: RXDATA is empty.
                                01: The address is received.
                                10: Data is received.
                                11: Master code is received. valid only when MCDE=1.</description>
                            <bitRange>[13:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_STRETCH_BUSY</name>
                            <description>Slave clock stretching busy state. Valid only in slave mode.
                                0: Without clock stretching.
                                1: With clock stretching.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_WR</name>
                            <description>Slave write status. Valid only in slave mode.
                                1: Valid after the slave receives a write request from the master.
                                0: The slave is cleared automatically after receiving a read request from the master or STOP.</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_RD</name>
                            <description>Slave read state. Valid only in slave mode.
                                1: Valid after the slave receives a read request from the master.
                                0: The slave is cleared automatically after receiving a write request from the master or STOP.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_ACTIVE</name>
                            <description>Slave active state. Valid only in slave mode.
                                0: slave device is inactive
                                1: The slave device is active. This bit is active after a successful address match; it is automatically cleared after receiving a STOP, or an unsuccessful address match after Start_repeat.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SDA</name>
                            <description>IIC SDA Status. Not affected by IIC bus enable
                                0: IIC SDA is low
                                1: IIC SDA is high</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SCL</name>
                            <description>IIC SCL Status. Not affected by IIC bus enable
                                0: IIC SCL is low
                                1: IIC SCL is high</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>BUSY</name>
                            <description>Bus Busy Status. This bit is not controlled by the IIC_CCFG.EN bit and still detects the bus busy state when EN is not enabled
                                0: Bus not busy
                                1: Bus busy, IIC bus active from START to STOP</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_CTRANS</name>
                    <description>general transfer register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x02</resetValue>
                    <fields>
                        <field>
                            <name>TXD_CLR</name>
                            <description>Transmit data register is cleared. Hardware clears it automatically.
                                0: Not cleared.
                                1: Clear the IF.TXE bit.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RX_ACK</name>
                            <description>When acting as a sender, received ACK/NACK. hardware set, IF.TXF is valid to query this bit; received Start_repeat or STOP will set this bit 1.
                                0: ACK received
                                1: NACK received</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TX_ACK</name>
                            <description>Sends ACK/NACK when acting as receiver.
                                0: Sends ACK.
                                1: Send NACK. Note: In the following cases, ACK/NACK is not determined by this bit: A. The hardware automatically sends an ACK/NACK when the slave receives the address. B. slave MCDE is valid, hardware automatically returns NACK when master code is received. C. The hardware automatically sends a NACK when the slave receives an overflow.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_RXDATA</name>
                    <description>Receive Data Register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RXDATA</name>
                            <description>Receive data register.IF.RXNE is 1, indicating that valid data exists in this register.
                                Note: This register is updated at the moment of completion of data reception (not including ACK/NACK transmission). See the RXF bit description for slave receive address byte conditions.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_TXDATA</name>
                    <description>send data register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TXDATA</name>
                            <description>Transmit Data Register.IF.TXE is 0, indicating that there is data to be sent in this register.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_IE</name>
                    <description>interrupt enable register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MLTO</name>
                            <description>Master SCL LOW Timeout interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SLV_STO</name>
                            <description>Slave detects STOP interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SLV_STA</name>
                            <description>Slave detects START interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXF</name>
                            <description>End of receive data interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXF</name>
                            <description>End-of-send data interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXOVF</name>
                            <description>Receive data register overflow interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_IF</name>
                    <description>Interrupt Flag Register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x01</resetValue>
                    <fields>
                        <field>
                            <name>MLTO</name>
                            <description>Master SCL LOW timeout. Write 1 clear. Valid only in master mode.
                                0: No timeout.
                                1: Timeout. the SCL LOW time exceeds 1024 SCL LOW times set by the MSPC registers.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SLV_STO</name>
                            <description>Slave detected STOP.write1 clear. Valid only in slave mode.
                                0: slave did not detect STOP.
                                1: slave detected STOP.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SLV_STA</name>
                            <description>Slave detects START. write 1 clear. Valid only in slave mode.
                                0: slave does not detect START.
                                1: slave detects START.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXF</name>
                            <description>End of reception. Write 1 Clear, contains ACK/NACK time.
                                0: Receiving is not finished.
                                1: End of reception.
                                Note: The slave receives the situation description:
                                1. In 7-bit address mode of Slave device, the slave address byte (inclusive) is used as the address of the slave device. (R/W bits) Receipt is complete and this interrupt is generated if the address matches.
                                2. In 10-bit address mode of Slave device, when the second byte of slave address (ADDR[7:0]) is received, this interrupt will be generated if the 10-bit address matches; the first byte of the slave address following repeat START, this interrupt will be generated if the address of 8 or9 bits matches; the first byte following repeat START will not generate this interrupt even if ADDR[9:8] matches after the first byte of the slave address has been received. After the first byte following START is received, even if ADDR[9:8] matches, this interrupt will not be generated.
                                3. Slave mode, SCTRL.MCDE=1, receive master code This interrupt is generated when</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXF</name>
                            <description>End of transmission. Write 1 Clear, contains ACK/NACK time.
                                0: Sending is not finished, or not sent.
                                1: End of sending.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXOVF</name>
                            <description>Receive data register overflow. Software Write
                                1 Clear.(Updated point in time, not including ACK/NACK transmissions)
                                0: No overflow.
                                1: When RXDATA is non-null and a new byte is received, an overflow occurs. When the overflow occurs, the new data is lost.
                                Note: For slave mode, if the STRETCH bit is valid, when the receive data register is non-empty and a new byte is received, the slave device pulls down the SCL signal until the old data in RXDATA is read away, and then stores the new data in RXDATA, this case will not generate an overflow.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXNE</name>
                            <description>The receive data register is not empty.
                                0: Receive data register empty, no unread receive data exists.
                                1: The receive data register is not empty and there is unread receive data. Note: This bit is updated at the moment when the data is finished being received (excluding the ACK/NACK transmit time). If the old data is not read in time when the reception of new data is completed, it is handled in the following cases: Master mode: New data is lost. RXOVF bit is set at the same time. Slave mode: A. STRETCH=0: New data is lost. Simultaneously set IF. RXOVF bit, the hardware automatically sends a NACK. B. STRETCH=1: Normal return to ACK, then before the master sends the next byte, slave holds SCL low until the old data is read away and then updates the new data into the RXDATA register. Finally release SCL.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXE</name>
                            <description>Send data register empty.
                                0: The transmit data register is non-empty and writing the TXDATA register is not allowed.
                                1: The transmit data register is empty, allowing the TXDATA register to be written.
                                Note: This bit is updated to 1 after the transmit data is read away by the hardware at the moment the transmit data is started (when IF.TXF is still 0). Writing new data to the TXDATA register clears this bit.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_MCTRL</name>
                    <description>Host Mode Control Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>STO</name>
                            <description>Write 1 to generate STOP, which is automatically cleared upon completion.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>WR</name>
                            <description>Write 1 to send the data in TXDATA, which is automatically cleared when finished (including ACK/NACK time). Before writing 1 to this bit, TXDATA must not be empty. Otherwise, this bit cannot be set.
                                Note: The WR and RD bits cannot be written to 1 at the same time.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RD</name>
                            <description>Write 1, receive data into RXDATA, and when finished (with ACK/NACK), write 1, receive data into RXDATA. time) is automatically cleared.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>STA</name>
                            <description>Write 1 to generate START, which is automatically cleared upon completion.
                                Note: Allow STA and WR to be set at the same time to prioritize sending START.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_MSPC</name>
                    <description>Timing Configuration Register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x33F7F</resetValue>
                    <fields>
                        <field>
                            <name>DAT_HD</name>
                            <description>SDA Data Hold Time Configuration. (Valid for Master and Slave) For master: tHD;DAT = (DAT_HD +
                                4) * Tpclk For slave: tHD;DAT = (DAT_HD + DNF + 6) * Tpclk
                                Note: If the application environment is harsh, it should be noted that a burr that occurs during the SDA data hold has the potential to cause the SDA to change along the time that advances the width of the burr (if there is no burr on the SCL at this time, an unanticipated STA, STOP will occur on the bus). In this case, DAT_HD should be set so that tHD;DAT is greater than the maximum burr width.</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPD</name>
                            <description>Clock prescaling, see SCL_HI and SCL_LOW descriptions for details.(Only for (Master mode active)</description>
                            <bitRange>[23:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SCL_HI</name>
                            <description>SCL Clock High Time Configuration. (available only in Master mode) tHIGH=( (SCL_HI+1) * (CPD+1) + DNF + 6) * Tpclk</description>
                            <bitRange>[15:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SCL_LOW</name>
                            <description>SCL Clock Low Time Configuration. (Valid for Master mode; in slave mode, this register needs to be configured if the STRETCH function is enabled and SCTRL.ASDS is configured to 0.) After slave writes TXDATA, delay the time set in this register before releasing SCL.) tLOW=( (SCL_LOW+1) * (CPD+1) + DAT_HD + 5) * Tpclk The period of SCL is tHIGH+tLOW. The recommended ratio of tHIGH to tLOW is 1:2.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_SCTRL</name>
                    <description>Slave Mode Control Register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x08</resetValue>
                    <fields>
                        <field>
                            <name>ASDS</name>
                            <description>Adaptive Data Setup Time Enable after Stretching. (Adaptive Stretching Data Setup)
                                0: Adaptive is not enabled. Set by MSPC.
                                1: Adaptive Enable. Automatically detects SCL when receiving master address Low level time as data build-up time after stretching.
                                Note: Slave-transmitter, when the STRETCH register is set to valid and stretching occurs, the salve will continue to pull down the SCL for a period of time after the new data is ready to ensure that the SDA line meets the data setup time requirement.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STRETCH</name>
                            <description>Clock stretching enable control.
                                0: Clock stretching is not enabled.
                                1: Clock stretching is enabled.
                                Note:(When the slave acts as a receiver, when new data is received but the old data is not read in time (IF.RXNE=1): CTRANS. STRETCH_BUSY becomes effective, and after returning to ACK, hold SCL at low level until the old data is read, then update the new data to RXDATA, and at the same time, STRETCH_BUSY becomes ineffective, and then release SCL to start the next data reception. BUSY becomes invalid, then release SCL to start the next data reception. When the slave acts as a transmitter, when the transmission is finished (IF. TXF=1, including the time of receiving ACK/NACK),but the new data is not ready (TXE=1): CTRANS.STRETCH_BUSY becomes active, holds SCL at low level until the new data is ready, and after delaying the SCL_LOW time. STRETCH_BUSY becomes invalid, and then release SCL to start sending new data).</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MCDE</name>
                            <description>Master Code Detect Enable.
                                0: Master code is not detected.
                                1: Master code is detected. When this bit is valid, slave detects master code after START and generates IF.RXF interrupt and hardware sets CST. SLV_RXDT to 11. software should make sure that slave address setting does not conflict with master code.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADMD</name>
                            <description>slave Address mode control.
                                0: 7-bit address mode
                                1: 10-bit address mode</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC0_SADDR</name>
                    <description>Slave Mode Address Register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MASK_ADDR7_1</name>
                            <description>Slave Corresponding Address Bit Mask.
                                0: No masking.
                                1: The mask corresponds to the bit address. After masking, the masked address bits are ignored when hardware matches the slave address. For 10-bit address mode, RXDATA only holds ADDR[7:0], so masking of ADDR[9:8] is not supported.</description>
                            <bitRange>[23:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MASK_ADDR0</name>
                            <description>Slave Corresponding Address Bit Mask.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR9_8</name>
                            <description>7-bit address mode: don't care
                                10-bit address mode: address bit9~bit8</description>
                            <bitRange>[9:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR7_1</name>
                            <description>Address bit7~bit1</description>
                            <bitRange>[7:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR0</name>
                            <description>7-bit address mode: don't care
                                10-bit address mode: address bit0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>IIC1</name>
            <description>IIC1 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400B9800</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>IIC1</name>
                <value>19</value>
            </interrupt>
            <registers>
                <register>
                    <name>IIC1_CCFG</name>
                    <description>General Configuration Register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x18</resetValue>
                    <fields>
                        <field>
                            <name>DNF</name>
                            <description>Receive SDA, SCL Digital Noise Filter
                                0000: Filter not enabled
                                0001: Filter enable and filter capacity up to 1 system clock
                                ......
                                1111: Filter enable and filter capacity up to 15 system clocks</description>
                            <bitRange>[6:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MODE</name>
                            <description>Mode Control
                                0: slave mode
                                1: master mode</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EN</name>
                            <description>IIC Bus Enable
                                0: not enabled
                                1: Enabling</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_CST</name>
                    <description>General Status Register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x06</resetValue>
                    <fields>
                        <field>
                            <name>SLV_RXDT</name>
                            <description>The type of data received by the Slave. Valid only in Slave mode.
                                00: RXDATA is empty.
                                01: The address is received.
                                10: Data is received.
                                11: Master code is received. valid only when MCDE=1.</description>
                            <bitRange>[13:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_STRETCH_BUSY</name>
                            <description>Slave clock stretching busy state. Valid only in slave mode.
                                0: Without clock stretching.
                                1: With clock stretching.</description>
                            <bitRange>[11:11]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_WR</name>
                            <description>Slave write status. Valid only in slave mode.
                                1: Valid after the slave receives a write request from the master.
                                0: The slave is cleared automatically after receiving a read request from the master or STOP.</description>
                            <bitRange>[10:10]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_RD</name>
                            <description>Slave read state. Valid only in slave mode.
                                1: Valid after the slave receives a read request from the master.
                                0: The slave is cleared automatically after receiving a write request from the master or STOP.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SLV_ACTIVE</name>
                            <description>Slave active state. Valid only in slave mode.
                                0: slave device is inactive
                                1: The slave device is active. This bit is active after a successful address match; it is automatically cleared after receiving a STOP, or an unsuccessful address match after Start_repeat.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SDA</name>
                            <description>IIC SDA Status. Not affected by IIC bus enable
                                0: IIC SDA is low
                                1: IIC SDA is high</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>SCL</name>
                            <description>IIC SCL Status. Not affected by IIC bus enable
                                0: IIC SCL is low
                                1: IIC SCL is high</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>BUSY</name>
                            <description>Bus Busy Status. This bit is not controlled by the IIC_CCFG.EN bit and still detects the bus busy state when EN is not enabled
                                0: Bus not busy
                                1: Bus busy, IIC bus active from START to STOP</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_CTRANS</name>
                    <description>general transfer register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x02</resetValue>
                    <fields>
                        <field>
                            <name>TXD_CLR</name>
                            <description>Transmit data register is cleared. Hardware clears it automatically.
                                0: Not cleared.
                                1: Clear the IF.TXE bit.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RX_ACK</name>
                            <description>When acting as a sender, received ACK/NACK. hardware set, IF.TXF is valid to query this bit; received Start_repeat or STOP will set this bit 1.
                                0: ACK received
                                1: NACK received</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TX_ACK</name>
                            <description>Sends ACK/NACK when acting as receiver.
                                0: Sends ACK.
                                1: Send NACK. Note: In the following cases, ACK/NACK is not determined by this bit: A. The hardware automatically sends an ACK/NACK when the slave receives the address. B. slave MCDE is valid, hardware automatically returns NACK when master code is received. C. The hardware automatically sends a NACK when the slave receives an overflow.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_RXDATA</name>
                    <description>Receive Data Register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>RXDATA</name>
                            <description>Receive data register.IF.RXNE is 1, indicating that valid data exists in this register.
                                Note: This register is updated at the moment of completion of data reception (not including ACK/NACK transmission). See the RXF bit description for slave receive address byte conditions.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_TXDATA</name>
                    <description>send data register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>TXDATA</name>
                            <description>Transmit Data Register.IF.TXE is 0, indicating that there is data to be sent in this register.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_IE</name>
                    <description>interrupt enable register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MLTO</name>
                            <description>Master SCL LOW Timeout interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SLV_STO</name>
                            <description>Slave detects STOP interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SLV_STA</name>
                            <description>Slave detects START interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXF</name>
                            <description>End of receive data interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>TXF</name>
                            <description>End-of-send data interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>RXOVF</name>
                            <description>Receive data register overflow interrupt enable.
                                0: Not enabled.
                                1: Enable.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_IF</name>
                    <description>Interrupt Flag Register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x01</resetValue>
                    <fields>
                        <field>
                            <name>MLTO</name>
                            <description>Master SCL LOW timeout. Write 1 clear. Valid only in master mode.
                                0: No timeout.
                                1: Timeout. the SCL LOW time exceeds 1024 SCL LOW times set by the MSPC registers.</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SLV_STO</name>
                            <description>Slave detected STOP.write1 clear. Valid only in slave mode.
                                0: slave did not detect STOP.
                                1: slave detected STOP.</description>
                            <bitRange>[9:9]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SLV_STA</name>
                            <description>Slave detects START. write 1 clear. Valid only in slave mode.
                                0: slave does not detect START.
                                1: slave detects START.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXF</name>
                            <description>End of reception. Write 1 Clear, contains ACK/NACK time.
                                0: Receiving is not finished.
                                1: End of reception.
                                Note: The slave receives the situation description:
                                1. In 7-bit address mode of Slave device, the slave address byte (inclusive) is used as the address of the slave device. (R/W bits) Receipt is complete and this interrupt is generated if the address matches.
                                2. In 10-bit address mode of Slave device, when the second byte of slave address (ADDR[7:0]) is received, this interrupt will be generated if the 10-bit address matches; the first byte of the slave address following repeat START, this interrupt will be generated if the address of 8 or9 bits matches; the first byte following repeat START will not generate this interrupt even if ADDR[9:8] matches after the first byte of the slave address has been received. After the first byte following START is received, even if ADDR[9:8] matches, this interrupt will not be generated.
                                3. Slave mode, SCTRL.MCDE=1, receive master code This interrupt is generated when</description>
                            <bitRange>[4:4]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>TXF</name>
                            <description>End of transmission. Write 1 Clear, contains ACK/NACK time.
                                0: Sending is not finished, or not sent.
                                1: End of sending.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXOVF</name>
                            <description>Receive data register overflow. Software Write
                                1 Clear.(Updated point in time, not including ACK/NACK transmissions)
                                0: No overflow.
                                1: When RXDATA is non-null and a new byte is received, an overflow occurs. When the overflow occurs, the new data is lost.
                                Note: For slave mode, if the STRETCH bit is valid, when the receive data register is non-empty and a new byte is received, the slave device pulls down the SCL signal until the old data in RXDATA is read away, and then stores the new data in RXDATA, this case will not generate an overflow.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RXNE</name>
                            <description>The receive data register is not empty.
                                0: Receive data register empty, no unread receive data exists.
                                1: The receive data register is not empty and there is unread receive data. Note: This bit is updated at the moment when the data is finished being received (excluding the ACK/NACK transmit time). If the old data is not read in time when the reception of new data is completed, it is handled in the following cases: Master mode: New data is lost. RXOVF bit is set at the same time. Slave mode: A. STRETCH=0: New data is lost. Simultaneously set IF. RXOVF bit, the hardware automatically sends a NACK. B. STRETCH=1: Normal return to ACK, then before the master sends the next byte, slave holds SCL low until the old data is read away and then updates the new data into the RXDATA register. Finally release SCL.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>TXE</name>
                            <description>Send data register empty.
                                0: The transmit data register is non-empty and writing the TXDATA register is not allowed.
                                1: The transmit data register is empty, allowing the TXDATA register to be written.
                                Note: This bit is updated to 1 after the transmit data is read away by the hardware at the moment the transmit data is started (when IF.TXF is still 0). Writing new data to the TXDATA register clears this bit.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_MCTRL</name>
                    <description>Host Mode Control Register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>STO</name>
                            <description>Write 1 to generate STOP, which is automatically cleared upon completion.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>WR</name>
                            <description>Write 1 to send the data in TXDATA, which is automatically cleared when finished (including ACK/NACK time). Before writing 1 to this bit, TXDATA must not be empty. Otherwise, this bit cannot be set.
                                Note: The WR and RD bits cannot be written to 1 at the same time.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>RD</name>
                            <description>Write 1, receive data into RXDATA, and when finished (with ACK/NACK), write 1, receive data into RXDATA. time) is automatically cleared.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>STA</name>
                            <description>Write 1 to generate START, which is automatically cleared upon completion.
                                Note: Allow STA and WR to be set at the same time to prioritize sending START.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>write-only</access>
                            <modifiedWriteValues>clear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_MSPC</name>
                    <description>Timing Configuration Register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x33F7F</resetValue>
                    <fields>
                        <field>
                            <name>DAT_HD</name>
                            <description>SDA Data Hold Time Configuration. (Valid for Master and Slave) For master: tHD;DAT = (DAT_HD +
                                4) * Tpclk For slave: tHD;DAT = (DAT_HD + DNF + 6) * Tpclk
                                Note: If the application environment is harsh, it should be noted that a burr that occurs during the SDA data hold has the potential to cause the SDA to change along the time that advances the width of the burr (if there is no burr on the SCL at this time, an unanticipated STA, STOP will occur on the bus). In this case, DAT_HD should be set so that tHD;DAT is greater than the maximum burr width.</description>
                            <bitRange>[27:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CPD</name>
                            <description>Clock prescaling, see SCL_HI and SCL_LOW descriptions for details.(Only for (Master mode active)</description>
                            <bitRange>[23:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SCL_HI</name>
                            <description>SCL Clock High Time Configuration. (available only in Master mode) tHIGH=( (SCL_HI+1) * (CPD+1) + DNF + 6) * Tpclk</description>
                            <bitRange>[15:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SCL_LOW</name>
                            <description>SCL Clock Low Time Configuration. (Valid for Master mode; in slave mode, this register needs to be configured if the STRETCH function is enabled and SCTRL.ASDS is configured to 0.) After slave writes TXDATA, delay the time set in this register before releasing SCL.) tLOW=( (SCL_LOW+1) * (CPD+1) + DAT_HD + 5) * Tpclk The period of SCL is tHIGH+tLOW. The recommended ratio of tHIGH to tLOW is 1:2.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_SCTRL</name>
                    <description>Slave Mode Control Register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x08</resetValue>
                    <fields>
                        <field>
                            <name>ASDS</name>
                            <description>Adaptive Data Setup Time Enable after Stretching. (Adaptive Stretching Data Setup)
                                0: Adaptive is not enabled. Set by MSPC.
                                1: Adaptive Enable. Automatically detects SCL when receiving master address Low level time as data build-up time after stretching.
                                Note: Slave-transmitter, when the STRETCH register is set to valid and stretching occurs, the salve will continue to pull down the SCL for a period of time after the new data is ready to ensure that the SDA line meets the data setup time requirement.</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>STRETCH</name>
                            <description>Clock stretching enable control.
                                0: Clock stretching is not enabled.
                                1: Clock stretching is enabled.
                                Note:(When the slave acts as a receiver, when new data is received but the old data is not read in time (IF.RXNE=1): CTRANS. STRETCH_BUSY becomes effective, and after returning to ACK, hold SCL at low level until the old data is read, then update the new data to RXDATA, and at the same time, STRETCH_BUSY becomes ineffective, and then release SCL to start the next data reception. BUSY becomes invalid, then release SCL to start the next data reception. When the slave acts as a transmitter, when the transmission is finished (IF. TXF=1, including the time of receiving ACK/NACK),but the new data is not ready (TXE=1): CTRANS.STRETCH_BUSY becomes active, holds SCL at low level until the new data is ready, and after delaying the SCL_LOW time. STRETCH_BUSY becomes invalid, and then release SCL to start sending new data).</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MCDE</name>
                            <description>Master Code Detect Enable.
                                0: Master code is not detected.
                                1: Master code is detected. When this bit is valid, slave detects master code after START and generates IF.RXF interrupt and hardware sets CST. SLV_RXDT to 11. software should make sure that slave address setting does not conflict with master code.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADMD</name>
                            <description>slave Address mode control.
                                0: 7-bit address mode
                                1: 10-bit address mode</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IIC1_SADDR</name>
                    <description>Slave Mode Address Register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>MASK_ADDR7_1</name>
                            <description>Slave Corresponding Address Bit Mask.
                                0: No masking.
                                1: The mask corresponds to the bit address. After masking, the masked address bits are ignored when hardware matches the slave address. For 10-bit address mode, RXDATA only holds ADDR[7:0], so masking of ADDR[9:8] is not supported.</description>
                            <bitRange>[23:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MASK_ADDR0</name>
                            <description>Slave Corresponding Address Bit Mask.</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR9_8</name>
                            <description>7-bit address mode: don't care
                                10-bit address mode: address bit9~bit8</description>
                            <bitRange>[9:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR7_1</name>
                            <description>Address bit7~bit1</description>
                            <bitRange>[7:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADDR0</name>
                            <description>7-bit address mode: don't care
                                10-bit address mode: address bit0</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>SARADC</name>
            <description>SARADC unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400BA000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>SARADC</name>
                <value>4</value>
            </interrupt>
            <registers>
                <register>
                    <name>ADC_CFG</name>
                    <description>ADC configuration register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DMA_EN</name>
                            <description>DMA Read FIFO Enable
                                0: CPU reads FIFO
                                1: DMA Read FIFO</description>
                            <bitRange>[29:29]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_TRIG</name>
                            <description>ADC Trigger Source Selection
                                0: Select CPU to trigger ADC sampling
                                1: Select an external signal to trigger ADC sampling</description>
                            <bitRange>[28:28]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_EN</name>
                            <description>ADC enable bit
                                0: disable 1: Enable</description>
                            <bitRange>[27:27]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>IN_SMPL_WIN</name>
                            <description>ADC Internal Sample Clock Method Sample Window Selection
                                000: Sample setup time is held for 1 ADC clock cycle
                                001: Sample build time is held for 3 ADC clock cycles
                                010: Sample build time is held for 5 ADC clock cycles
                                011: Sample build time is held for 7 ADC clock cycles
                                100: Sample build time is held for 9 ADC clock cycles
                                101: Sample setup time is held for 11 ADC clock cycles
                                110: Sample build time is held for 13 ADC clock cycles
                                111: Sample build time is held for 15 ADC clock cycles</description>
                            <bitRange>[26:24]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_SMPL_CLK</name>
                            <description>ADC Sampling Mode Selection
                                1: Indicates that the ADC uses the internal sampling clock method.
                                0: Indicates that the ADC uses an external sampling clock.</description>
                            <bitRange>[23:23]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_MEM_MODE</name>
                            <description>ADC data storage method selection:
                                0: ADC data storage is in FIFO mode;
                                1: ADC data is stored in channel mode;</description>
                            <bitRange>[22:22]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>SMPL_SETUP</name>
                            <description>ADC External Sampling Clock Method Sampling Window Selection
                                000: Sample setup time is held for 1 ADC clock cycle
                                001: Sample setup time is held for 2 ADC clock cycles
                                010: Sample build time is held for 4 ADC clock cycles
                                011: Sample build time hold for 8 ADC clock cycles
                                100: Sample setup time is held for 16 ADC clock cycles
                                101: Sample build time is held for 32 ADC clock cycles
                                110: Sample build time is held for 64 ADC clock cycles
                                111: 128 ADC clock cycles of sample setup time retention</description>
                            <bitRange>[21:19]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CONT</name>
                            <description>ADC Sampling Mode
                                0: single sample
                                1: Continuous sampling</description>
                            <bitRange>[18:18]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>AVG</name>
                            <description>One-start ADC Sample Averaging Configuration Register
                                00: 1 sample averaged
                                01: 2 samples averaged
                                10: 4 samples averaged
                                11: 8 samples averaged</description>
                            <bitRange>[17:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_CH_SEL</name>
                            <description>ADC Channel Select Register Bit15-bit0 corresponds to channel 15-channel 0. If the corresponding bit is configured as 1, it means the channel is valid.</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_START</name>
                    <description>ADC boot register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>FIFO_CLR</name>
                            <description>FIFO Clear Enable
                                0: disable
                                1: enable write 1 clear FIFO</description>
                            <bitRange>[3:3]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>SOFT_RESET</name>
                            <description>ADC Soft Reset
                                0: Reset active After the ADC is enabled, the ADC must be reset once before startup</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>BUSY</name>
                            <description>ADC Operating Status
                                1: Indicates busy</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>START</name>
                            <description>ADC start signal
                                0: disable
                                1: enable A write of 1 to this bit initiates a conversion. Can be used with ADC_CONT. If ADC_CONT is in one-shot sampling mode, after this position 1, the valid channels will be polled sequentially for sample conversion and the converted data will be saved in the FIFO or register of the corresponding channel. The hardware will automatically clear the data after the conversion is completed. If ADC_CONT is in continuous sampling mode, the position 1 means start ADC conversion, and clearing it means stop ADC conversion. After starting ADC conversion, the valid channels will be polled sequentially for sampling and conversion, and the converted data will be stored in the FIFO or register of the corresponding channel. After each conversion, it judges whether the bit is 1, if it is 1, the conversion will continue, if it is 0, the conversion will stop.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_IE</name>
                    <description>ADC interrupt enable register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_FIFO_HFULL_IE</name>
                            <description>ADC FIFO Half Full Interrupt Enable
                                0: disable
                                1: Enable</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_FIFO_FULL_IE</name>
                            <description>ADC FIFO full interrupt enable
                                0: disable
                                1: Enable</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_CHx_EOC_IE</name>
                            <description>ADC Channel x Data Conversion Complete Interrupt Enable</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_IF</name>
                    <description>ADC Interrupt status Register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_FIFO_HFULL_IF</name>
                            <description>ADC FIFO half-full interrupt status write 1 clear</description>
                            <bitRange>[17:17]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                        <field>
                            <name>ADC_FIFO_FULL_IF</name>
                            <description>ADC FIFO Full Interrupt Status Write 1 Zero Clear</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>ADC_CHx_EOC_IST</name>
                            <description>ADC channel x data conversion complete interrupt status write 1 clear</description>
                            <bitRange>[15:0]</bitRange>
                            <access>read-write</access>
                            <modifiedWriteValues>oneToClear</modifiedWriteValues>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH0_STAT</name>
                    <description>ADC0 status register</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 0 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 0. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH0_DATA</name>
                    <description>ADC0 data register</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel 0 Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH1_STAT</name>
                    <description>ADC1 status register</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 1 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 1. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH1_DATA</name>
                    <description>ADC1 data register</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH2_STAT</name>
                    <description>ADC2 status register</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 2 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 2. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH2_DATA</name>
                    <description>ADC2 data register</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH3_STAT</name>
                    <description>ADC3 status register</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 3 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 3. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH3_DATA</name>
                    <description>ADC3 data register</description>
                    <addressOffset>0x2C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH4_STAT</name>
                    <description>ADC4 status register</description>
                    <addressOffset>0x30</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 4 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 4. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH4_DATA</name>
                    <description>ADC4 data register</description>
                    <addressOffset>0x34</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH5_STAT</name>
                    <description>ADC5 status register</description>
                    <addressOffset>0x38</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 5 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 5. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH5_DATA</name>
                    <description>ADC5 data register</description>
                    <addressOffset>0x3C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH6_STAT</name>
                    <description>ADC6 status register</description>
                    <addressOffset>0x40</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 6 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 6. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH6_DATA</name>
                    <description>ADC6 data register</description>
                    <addressOffset>0x44</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH7_STAT</name>
                    <description>ADC7 status register</description>
                    <addressOffset>0x48</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 7 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 7. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH7_DATA</name>
                    <description>ADC7 data register</description>
                    <addressOffset>0x4C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH8_STAT</name>
                    <description>ADC8 status register</description>
                    <addressOffset>0x50</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 8 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 8. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH8_DATA</name>
                    <description>ADC8 data register</description>
                    <addressOffset>0x54</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH9_STAT</name>
                    <description>ADC9 status register</description>
                    <addressOffset>0x58</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 9 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 9. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH9_DATA</name>
                    <description>ADC9 data register</description>
                    <addressOffset>0x5C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH10_STAT</name>
                    <description>ADC10 status register</description>
                    <addressOffset>0x60</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 10 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 10. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH10_DATA</name>
                    <description>ADC10 data register</description>
                    <addressOffset>0x64</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH11_STAT</name>
                    <description>ADC11 status register</description>
                    <addressOffset>0x68</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 11 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 11. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH11_DATA</name>
                    <description>ADC11 data register</description>
                    <addressOffset>0x6C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH12_STAT</name>
                    <description>ADC12 status register</description>
                    <addressOffset>0x70</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 12 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 12. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH12_DATA</name>
                    <description>ADC12 data register</description>
                    <addressOffset>0x74</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH13_STAT</name>
                    <description>ADC13 status register</description>
                    <addressOffset>0x78</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 13 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 13. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH13_DATA</name>
                    <description>ADC13 data register</description>
                    <addressOffset>0x7C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH14_STAT</name>
                    <description>ADC14 status register</description>
                    <addressOffset>0x80</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 14 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 14. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH14_DATA</name>
                    <description>ADC14 data register</description>
                    <addressOffset>0x84</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH15_STAT</name>
                    <description>ADC15 status register</description>
                    <addressOffset>0x88</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_EOC</name>
                            <description>ADC Channel 14 Data Conversion Completion Flag
                                1: Indicates that the ADC has completed one sample conversion for channel 14. The ADC can be cleared by writing 1 to the bit corresponding to ADC_IF.</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CH15_DATA</name>
                    <description>ADC15 data register</description>
                    <addressOffset>0x8C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_CH_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_CH_DATA</name>
                            <description>ADC Channel x Data Register
                                Note: After the overflow, the data converted again will overwrite the old data</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_FIFO_STAT</name>
                    <description>ADC FIFO status register</description>
                    <addressOffset>0xA0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x04</resetValue>
                    <fields>
                        <field>
                            <name>ADC_FIFO_LEVEL</name>
                            <description>ADC Data FIFO Water Level
                                0000: When it is not full, it means the FIFO has 0 data, when it is full, it means the FIFO has 16 data;
                                0001: Indicates that the FIFO has 1 data;
                                0010: Indicates that the FIFO has 2 data;
                                0011: Indicates that the FIFO has 3 data;
                                0100: Indicates that the FIFO has 4 data;
                                0101: Indicates that the FIFO has 5 data;
                                0110: Indicates that the FIFO has 6 data;
                                0111: Indicates that the FIFO has 7 data;
                                1000: Indicates that the FIFO has 8 data;
                                1001: Indicates that the FIFO has 9 data;
                                1010: Indicates that the FIFO has 10 data;
                                1011: Indicates that the FIFO has 11 data;
                                1100: Indicates that the FIFO has 12 data;
                                1101: Indicates that the FIFO has 13 data;
                                1110: Indicates that the FIFO has 14 data;
                                1111: Indicates that the FIFO has 15 data;</description>
                            <bitRange>[7:4]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_FIFO_EMPTY</name>
                            <description>ADC Data FIFO Empty Flag
                                1: Indicates that the FIFO is empty
                                0: Indicates that the FIFO is not empty</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_FIFO_HFULL</name>
                            <description>ADC Data FIFO Half Full Flag
                                1: Indicates that the FIFO is half full
                                0: Indicates that the FIFO is not half full</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_FIFO_FULL</name>
                            <description>ADC data FIFO full flag
                                1: Indicates that the FIFO is full
                                0: Indicates that the FIFO is not full</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_FIFO_DATA</name>
                    <description>ADC FIFO data register</description>
                    <addressOffset>0xA4</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ADC_FIFO_NUM</name>
                            <description>Channel number corresponding to ADC data</description>
                            <bitRange>[15:12]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>ADC_FIFO_DATA</name>
                            <description>ADC Data FIFO Register
                                Note: After an overflow, data that is converted again is discarded</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EXTTRIG_SEL</name>
                    <description>External signal trigger ADC</description>
                    <addressOffset>0xB0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>EXTTRIG_SEL</name>
                            <description>External Trigger ADC Sample Signal Selection Control Bit11-bit0: Indicates that they are used to control exttrig_in[11:0], respectively. Whether to trigger the control bit of ADC
                                0 means not valid; 1 means valid</description>
                            <bitRange>[11:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CALIB_OFFSET</name>
                    <description>ADC calibration OFFSET register</description>
                    <addressOffset>0xF0</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>OFFSET_VALID</name>
                            <description>OFFSET Whether the data is valid or not</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>OFFSET</name>
                            <description>OFFSET value for ADC data calibration. The calculated OFFSET needs to be stored in this register. Used for calibration when using ADC.</description>
                            <bitRange>[7:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADC_CALIB_KD</name>
                    <description>ADC calibration KD register</description>
                    <addressOffset>0xF4</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>KD_VALID</name>
                            <description>Validity of KD data</description>
                            <bitRange>[16:16]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>KD</name>
                            <description>ADC data calibrates the fractional part of the K value. The fractional part of the calculated K value needs to be stored in this register. Used for calibration when using ADC. If K is greater than 1, the sign bit is 1. If K is less than 1, the sign bit is 0.</description>
                            <bitRange>[9:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
        <peripheral>
            <name>AES128</name>
            <description>AES128 unit</description>
            <groupName>Peripheral</groupName>
            <baseAddress>0x400BD000</baseAddress>
            <addressBlock>
                <offset>0x0</offset>
                <size>0x800</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>AES_CR</name>
                    <description>AES control register</description>
                    <addressOffset>0x00</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>ERRC</name>
                            <description>Error Flag Clear Writing a 1 to this bit will clear the RDERR and WRERR flags. This bit reads low.</description>
                            <bitRange>[8:8]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>CCFC</name>
                            <description>The computation complete flag is cleared. This bit reads low.</description>
                            <bitRange>[7:7]</bitRange>
                            <access>write-only</access>
                        </field>
                        <field>
                            <name>CHMOD</name>
                            <description>AES link mode selection.
                                00: Electronic Codebook (ECB)
                                01: Cipher Block Link (CBC)
                                10: Counter mode (CTR)
                                The AES link mode can only be changed when AES is disabled. Writing these bits when AES is enabled is prohibited to avoid unpredictable AES behaviour.</description>
                            <bitRange>[6:5]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>MODE</name>
                            <description>AES mode selection.
                                00: Mode 1: Encryption
                                01: Mode II: Key Derivation
                                10: Mode III: Decryption
                                11: Mode 4: Key Derivation + Decryption The mode of operation can only be changed when AES is disabled. Disable writing these bits when AES is enabled to avoid unpredictable AES behaviour. If CTR mode is selected, mode 4 is disabled. if the software attempts to configure mode 4 for CTR mode, it will force mode 3.</description>
                            <bitRange>[4:3]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>DATATYPE</name>
                            <description>Data type selection.
                                00: 32-bit data, no bit exchange.
                                01: 16-bit data or half-word, half-word exchange is performed. For example, the original data 0x764356AB, the value given to the encryption block is 0x56AB7643
                                10: 8-bit data or byte, all bytes are exchanged. For example, the original data is 0x764356AB and the value given to the encryption block is 0xAB564376.
                                11: 1-bit data. All bits are exchanged. For example, the original data is 0x00112233, the value given to the encryption block is 0xCC448800 The operation mode can be changed only when AES is disabled. It is forbidden to write these bits when AES is enabled to avoid some unpredictable AES behaviour.</description>
                            <bitRange>[2:1]</bitRange>
                            <access>read-write</access>
                        </field>
                        <field>
                            <name>EN</name>
                            <description>AES enable signal. The AES can be initialised at any time by resetting this bit: The AES is ready to start processing new blocks when EN is set. This bit is automatically cleared by hardware when the AES completes operation in mode 2 (key derivation).</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_SR</name>
                    <description>AES status register</description>
                    <addressOffset>0x04</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>WRERR</name>
                            <description>Write Error Flag. This bit is set by hardware when an unexpected read operation from the AES_DINR register is detected (during the calculation or data entry phase). Software clears it by setting the ERRC bit in the AES_CR register.
                                0: No write error detected
                                1: Write error detected This flag has no effect on the AES, which continues to operate even if a WRERR interrupt is generated.</description>
                            <bitRange>[2:2]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>RDERR</name>
                            <description>Read Error Flag. This bit is set by hardware when an unexpected read operation from the AES_DOUTR register is detected (during the calculation or data entry phase). Software clears it by setting the ERRC bit in the AES_CR register.
                                0: No read error detected
                                1: Read error detected This flag has no effect on the AES, which continues to operate even if an RDERR interrupt is generated.</description>
                            <bitRange>[1:1]</bitRange>
                            <access>read-only</access>
                        </field>
                        <field>
                            <name>CCF</name>
                            <description>Calculation Completion Flag. If the CCFIE bit was previously set in the AES_CR register. Software clears it by setting the CCFC bit in the AES_CR register.
                                1: Calculation complete
                                0: Calculation not completed</description>
                            <bitRange>[0:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_DINR</name>
                    <description>AES input data register</description>
                    <addressOffset>0x08</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DINR</name>
                            <description>Input data register. In the input stage, this register must be written four times: - In mode 1 (encryption), four bytes must be written, representing data from MSB to LSB. - In mode 2 (key derivation), this register is not used, as it only involves key derivation calculation starting from the AES_KEYRx register. - In modes 3 (decryption) and 4 (key derivation + decryption), four bytes must be written, representing ciphertext from MSB to LSB.
                                Note: This register must be accessed with a 32-bit data width.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_DOUTR</name>
                    <description>AES output data register</description>
                    <addressOffset>0x0C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>DOUTR</name>
                            <description>Data output register. This read-only register can be accessed four times to obtain the 128-bit output result once the CCF flag (calculation completion flag) is generated. In mode 1 (encryption), the four bytes read represent encrypted data from MSB to LSB. In mode 2 (key derivation), this register does not need to be read since the derived key is located in the AES_KEYRx register. In modes 3 (decryption) and 4 (key derivation + decryption), the four bytes read represent plaintext from MSB to LSB. Note that this register must be accessed with a 32-bit data width.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-only</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_KEYR0</name>
                    <description>AES key register 0</description>
                    <addressOffset>0x10</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>KEYR</name>
                            <description>This key register must be written before enabling AES: In modes 1 (encryption), 2 (key derivation), and 4 (key derivation + decryption), the value to be written represents the encrypted secret key from LSB, meaning key [31:0]. In mode 3 (decryption), the value to be written represents the decrypted secret key [31:0]. When writing an encryption key to the register in this decryption mode, reading it before enabling AES returns the encrypted value. After setting the CCF flag, reading it returns the derived key. Reading this register when enabling AES returns an unpredictable value.
                                Note: This register does not contain the derived key in mode 4 (derived key + decryption). It always contains the encrypted key value.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_KEYR1</name>
                    <description>AES key register 1</description>
                    <addressOffset>0x14</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>KEYR</name>
                            <description>Secret key register [63:32]</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_KEYR2</name>
                    <description>AES key register 2</description>
                    <addressOffset>0x18</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>KEYR</name>
                            <description>Secret key register [95:64]</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_KEYR3</name>
                    <description>AES key register 3</description>
                    <addressOffset>0x1C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>KEYR</name>
                            <description>Secret key register [127:96]</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_IVR0</name>
                    <description>AES Encryption starting point register 0</description>
                    <addressOffset>0x20</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IVR</name>
                            <description>Initialization vector register [31:0]. Must be written before setting EN position 1 in the AES_CR register. The register value has no meaning in the following cases: - ECB mode (Electronic Codebook). - Key derivation in CTR or CBC modes. In CTR mode (Counter Mode), this register contains a 32-bit counter value. Reading this register while enabling AES returns a value of 0x00000000.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_IVR1</name>
                    <description>AES Encryption starting point register 1</description>
                    <addressOffset>0x24</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IVR</name>
                            <description>Initialization vector register [63:32]. In CTR mode (counter mode), this register contains random number values. When enabling AES at the same time, reading this register returns a value of 0x00000000.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_IVR2</name>
                    <description>AES Encryption starting point register 2</description>
                    <addressOffset>0x28</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IVR</name>
                            <description>Initialization vector register [95:64]. In CTR mode (counter mode), this register contains random number values. When enabling AES simultaneously, reading this register returns a value of 0x00000000.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>AES_IVR3</name>
                    <description>AES Encryption starting point register 3</description>
                    <addressOffset>0x2C</addressOffset>
                    <size>0x20</size>
                    <resetValue>0x00</resetValue>
                    <fields>
                        <field>
                            <name>IVR</name>
                            <description>Initialization vector register (MSB IVR [127:96]). In CTR mode (counter mode), this register contains random number values. When enabling AES simultaneously, reading this register returns a value of 0x00000000.</description>
                            <bitRange>[31:0]</bitRange>
                            <access>read-write</access>
                        </field>
                    </fields>
                </register>
            </registers>
        </peripheral>
    </peripherals>
</device>